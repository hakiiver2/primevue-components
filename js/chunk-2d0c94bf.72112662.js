(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c94bf"],{5916:function(l,e,n){"use strict";n.r(e);var t=n("7a23"),a={class:"content-section introduction"},c=Object(t["m"])("div",{class:"feature-intro"},[Object(t["m"])("h1",null,"InputMask"),Object(t["m"])("p",null,"InputMask component is used to enter input in a certain format such as numeric, date, currency, email and phone.")],-1),o={class:"content-section implementation"},d={class:"card"},m={class:"p-fluid p-formgrid p-grid"},u={class:"p-field p-col-12 p-md-4"},s=Object(t["m"])("label",{for:"basic"},"Basic",-1),i={class:"p-field p-col-12 p-md-4"},r=Object(t["m"])("label",{for:"ssn"},"SSN",-1),p={class:"p-field p-col-12 p-md-4"},b=Object(t["m"])("label",{for:"date"},"Date",-1),v={class:"p-field p-col-12 p-md-4"},O=Object(t["m"])("label",{for:"Phone"},"Phone",-1),j={class:"p-field p-col-12 p-md-4"},f=Object(t["m"])("label",{for:"phoneext"},"Phone Ext",-1),h={class:"p-field p-col-12 p-md-4"},k=Object(t["m"])("label",{for:"serial"},"Serial",-1);function y(l,e,n,y,I,M){var V=Object(t["K"])("AppDemoActions"),g=Object(t["K"])("InputMask"),x=Object(t["K"])("InputMaskDoc");return Object(t["C"])(),Object(t["h"])("div",null,[Object(t["m"])("div",a,[c,Object(t["m"])(V)]),Object(t["m"])("div",o,[Object(t["m"])("div",d,[Object(t["m"])("div",m,[Object(t["m"])("div",u,[s,Object(t["m"])(g,{mask:"99-999999",modelValue:I.val1,"onUpdate:modelValue":e[1]||(e[1]=function(l){return I.val1=l}),placeholder:"99-999999"},null,8,["modelValue"])]),Object(t["m"])("div",i,[r,Object(t["m"])(g,{mask:"999-99-9999",modelValue:I.val2,"onUpdate:modelValue":e[2]||(e[2]=function(l){return I.val2=l}),placeholder:"999-99-9999"},null,8,["modelValue"])]),Object(t["m"])("div",p,[b,Object(t["m"])(g,{mask:"99/99/9999",modelValue:I.val3,"onUpdate:modelValue":e[3]||(e[3]=function(l){return I.val3=l}),placeholder:"99/99/9999",slotChar:"mm/dd/yyyy"},null,8,["modelValue"])]),Object(t["m"])("div",v,[O,Object(t["m"])(g,{mask:"(999) 999-9999",modelValue:I.val4,"onUpdate:modelValue":e[4]||(e[4]=function(l){return I.val4=l}),placeholder:"(999) 999-9999"},null,8,["modelValue"])]),Object(t["m"])("div",j,[f,Object(t["m"])(g,{mask:"(999) 999-9999? x99999",modelValue:I.val5,"onUpdate:modelValue":e[5]||(e[5]=function(l){return I.val5=l}),placeholder:"(999) 999-9999? x99999"},null,8,["modelValue"])]),Object(t["m"])("div",h,[k,Object(t["m"])(g,{mask:"a*-999-a999",modelValue:I.val6,"onUpdate:modelValue":e[6]||(e[6]=function(l){return I.val6=l}),placeholder:"a*-999-a999"},null,8,["modelValue"])])])])]),Object(t["m"])(x)])}var I=Object(t["m"])("h5",null,"Import",-1),M=Object(t["m"])("code",null,"\nimport InputMask from 'primevue/inputmask';\n\n",-1),V=Object(t["m"])("h5",null,"Getting Started",-1),g=Object(t["m"])("p",null,"A model can be bound using the standard v-model directive.",-1),x=Object(t["m"])("code",null,'\n<InputMask v-model="value" mask="99-999999" />\n\n',-1),S=Object(t["m"])("h5",null,"Mask",-1),C=Object(t["m"])("p",null,"Mask format can be a combination of the the following built-in definitions.",-1),D=Object(t["m"])("ul",null,[Object(t["m"])("li",null," a - Alpha character (A-Z,a-z) "),Object(t["m"])("li",null," 9 - Numeric character (0-9) "),Object(t["m"])("li",null," * - Alpha numberic character (A-Z,a-z,0-9) ")],-1),P=Object(t["m"])("code",null,'\n<InputMask v-model="value" mask="a*-999-a999" />\n\n',-1),w=Object(t["m"])("h5",null,"SlotChar",-1),A=Object(t["m"])("p",null,[Object(t["l"])("Underscore is the default placeholder for a mask and this can be customized using "),Object(t["m"])("i",null,"slotChart"),Object(t["l"])(" option.")],-1),U=Object(t["m"])("code",null,'\n<InputMask v-model="value" mask="99/99/9999" slotChar="mm/dd/yyyy" />\n\n',-1),N=Object(t["m"])("h5",null,"Optional Values",-1),E=Object(t["m"])("p",null,[Object(t["l"])("If the input does not complete the mask definition, it is cleared by default. Use "),Object(t["m"])("i",null,"autoClear"),Object(t["l"])(" property to control this behavior. In addition, certain part of a mask can be made optional by using ? symbol where anything after the question mark becomes optional.")],-1),K=Object(t["m"])("code",null,'\n<InputMask v-model="value" mask="(999) 999-9999? x99999" />\n\n',-1),z=Object(t["m"])("h5",null,"Properties",-1),B=Object(t["m"])("p",null,"InputText passes any valid attribute to the underlying input element. In addition;",-1),J=Object(t["m"])("div",{class:"doc-tablewrapper"},[Object(t["m"])("table",{class:"doc-table"},[Object(t["m"])("thead",null,[Object(t["m"])("tr",null,[Object(t["m"])("th",null,"Name"),Object(t["m"])("th",null,"Type"),Object(t["m"])("th",null,"Default"),Object(t["m"])("th",null,"Description")])]),Object(t["m"])("tbody",null,[Object(t["m"])("tr",null,[Object(t["m"])("td",null,"modelValue"),Object(t["m"])("td",null,"any"),Object(t["m"])("td",null,"null"),Object(t["m"])("td",null,"Value of the component.")]),Object(t["m"])("tr",null,[Object(t["m"])("td",null,"mask"),Object(t["m"])("td",null,"string"),Object(t["m"])("td",null,"null"),Object(t["m"])("td",null,"Mask pattern.")]),Object(t["m"])("tr",null,[Object(t["m"])("td",null,"slotChar"),Object(t["m"])("td",null,"string"),Object(t["m"])("td",null,"-"),Object(t["m"])("td",null,"Placeholder character in mask, default is underscore.")]),Object(t["m"])("tr",null,[Object(t["m"])("td",null,"autoClear"),Object(t["m"])("td",null,"boolean"),Object(t["m"])("td",null,"true"),Object(t["m"])("td",null,"Clears the incomplete value on blur.")]),Object(t["m"])("tr",null,[Object(t["m"])("td",null,"unmask"),Object(t["m"])("td",null,"boolean"),Object(t["m"])("td",null,"false"),Object(t["m"])("td",null,"Defines if model sets the raw unmasked value to bound value or the formatted mask value.")])])])],-1),T=Object(t["m"])("h5",null,"Events",-1),Z=Object(t["m"])("p",null,"Any valid event such as focus, blur and input are passed to the underlying input element.",-1),_=Object(t["m"])("h5",null,"Styling",-1),q=Object(t["l"])("Following is the list of structural style classes, for theming classes visit "),F=Object(t["l"])("theming"),G=Object(t["l"])(" page."),L=Object(t["m"])("div",{class:"doc-tablewrapper"},[Object(t["m"])("table",{class:"doc-table"},[Object(t["m"])("thead",null,[Object(t["m"])("tr",null,[Object(t["m"])("th",null,"Name"),Object(t["m"])("th",null,"Element")])]),Object(t["m"])("tbody",null,[Object(t["m"])("tr",null,[Object(t["m"])("td",null,"p-inputmask p-inputtext"),Object(t["m"])("td",null,"Input element")])])])],-1),H=Object(t["m"])("h5",null,"Dependencies",-1),Q=Object(t["m"])("p",null,"None.",-1);function R(l,e,n,a,c,o){var d=Object(t["K"])("router-link"),m=Object(t["K"])("AppDoc"),u=Object(t["L"])("code");return Object(t["C"])(),Object(t["h"])(m,{name:"InputMaskDemo",sources:c.sources,github:"inputmask/InputMaskDemo.vue"},{default:Object(t["U"])((function(){return[I,Object(t["V"])(Object(t["m"])("pre",null,[M],512),[[u,void 0,void 0,{script:!0}]]),V,g,Object(t["V"])(Object(t["m"])("pre",null,[x],512),[[u]]),S,C,D,Object(t["V"])(Object(t["m"])("pre",null,[P],512),[[u]]),w,A,Object(t["V"])(Object(t["m"])("pre",null,[U],512),[[u]]),N,E,Object(t["V"])(Object(t["m"])("pre",null,[K],512),[[u]]),z,B,J,T,Z,_,Object(t["m"])("p",null,[q,Object(t["m"])(d,{to:"/theming"},{default:Object(t["U"])((function(){return[F]})),_:1}),G]),L,H,Q]})),_:1},8,["sources"])}var W={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <div class="p-fluid p-formgrid p-grid">\n            <div class="p-field p-col-12 p-md-4">\n                <label for="basic">Basic</label>\n                <InputMask mask="99-999999" v-model="val1" placeholder="99-999999" />\n            </div>\n\n            <div class="p-field p-col-12 p-md-4">\n                <label for="ssn">SSN</label>\n                <InputMask mask="999-99-9999" v-model="val2" placeholder="999-99-9999" />\n            </div>\n\n            <div class="p-field p-col-12 p-md-4">\n                <label for="date">Date</label>\n                <InputMask mask="99/99/9999" v-model="val3" placeholder="99/99/9999" slotChar="mm/dd/yyyy" />\n            </div>\n\n            <div class="p-field p-col-12 p-md-4">\n                <label for="Phone">Phone</label>\n                <InputMask mask="(999) 999-9999" v-model="val4" placeholder="(999) 999-9999" />\n            </div>\n\n            <div class="p-field p-col-12 p-md-4">\n                <label for="phoneext">Phone Ext</label>\n                <InputMask mask="(999) 999-9999? x99999" v-model="val5" placeholder="(999) 999-9999? x99999"/>\n            </div>\n\n            <div class="p-field p-col-12 p-md-4">\n                <label for="serial">Serial</label>\n                <InputMask mask="a*-999-a999" v-model="val6" placeholder="a*-999-a999" />\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            val1: null,\n            val2: null,\n            val3: null,\n            val4: null,\n            val5: null,\n            val6: null\n        }\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <div class="p-fluid p-formgrid p-grid">\n            <div class="p-field p-col-12 p-md-4">\n                <label for="basic">Basic</label>\n                <InputMask mask="99-999999" v-model="val1" placeholder="99-999999" />\n            </div>\n\n            <div class="p-field p-col-12 p-md-4">\n                <label for="ssn">SSN</label>\n                <InputMask mask="999-99-9999" v-model="val2" placeholder="999-99-9999" />\n            </div>\n\n            <div class="p-field p-col-12 p-md-4">\n                <label for="date">Date</label>\n                <InputMask mask="99/99/9999" v-model="val3" placeholder="99/99/9999" slotChar="mm/dd/yyyy" />\n            </div>\n\n            <div class="p-field p-col-12 p-md-4">\n                <label for="Phone">Phone</label>\n                <InputMask mask="(999) 999-9999" v-model="val4" placeholder="(999) 999-9999" />\n            </div>\n\n            <div class="p-field p-col-12 p-md-4">\n                <label for="phoneext">Phone Ext</label>\n                <InputMask mask="(999) 999-9999? x99999" v-model="val5" placeholder="(999) 999-9999? x99999"/>\n            </div>\n\n            <div class="p-field p-col-12 p-md-4">\n                <label for="serial">Serial</label>\n                <InputMask mask="a*-999-a999" v-model="val6" placeholder="a*-999-a999" />\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \'vue\';\n\nexport default {\n    setup() {\n        const val1 = ref();\n        const val2 = ref();\n        const val3 = ref();\n        const val4 = ref();\n        const val5 = ref();\n        const val6 = ref();\n\n        return { val1, val2, val3, val4, val5, val6 }\n    }\n}\n<\\/script>\n'}}}}};W.render=R;var X=W,Y={data:function(){return{val1:null,val2:null,val3:null,val4:null,val5:null,val6:null}},components:{InputMaskDoc:X}};Y.render=y;e["default"]=Y}}]);