(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-260b5e21"],{"030d":function(e,n,t){var r=t("24fb");n=r(!1),n.push([e.i,"p[data-v-7963fce0]{margin-top:0}[data-v-7963fce0] .dark-demo-terminal{background-color:#212121;color:#fff}[data-v-7963fce0] .dark-demo-terminal .p-terminal-command{color:#80cbc4}[data-v-7963fce0] .dark-demo-terminal .p-terminal-prompt{color:#ffd54f}[data-v-7963fce0] .dark-demo-terminal .p-terminal-response{color:#9fa8da}",""]),e.exports=n},"0db1":function(e,n,t){"use strict";t("1ee2")},"1ee2":function(e,n,t){var r=t("030d");r.__esModule&&(r=r.default),"string"===typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);var a=t("499e").default;a("546b8bba",r,!0,{sourceMap:!1,shadowMode:!1})},b39e:function(e,n,t){"use strict";t.r(n);var r=t("7a23"),a=Object(r["Y"])("data-v-7963fce0");Object(r["F"])("data-v-7963fce0");var o={class:"content-section introduction"},m=Object(r["m"])("div",{class:"feature-intro"},[Object(r["m"])("h1",null,"Terminal"),Object(r["m"])("p",null,"Terminal is a text based user interface.")],-1),l={class:"content-section implementation"},c={class:"card"},s=Object(r["m"])("p",null,'Enter "date" to display the current date, "greet {0}" for a message and "random" to get a random number.',-1);Object(r["D"])();var d=a((function(e,n,t,a,d,i){var p=Object(r["K"])("AppDemoActions"),u=Object(r["K"])("Terminal"),b=Object(r["K"])("TerminalDoc");return Object(r["C"])(),Object(r["h"])("div",null,[Object(r["m"])("div",o,[m,Object(r["m"])(p)]),Object(r["m"])("div",l,[Object(r["m"])("div",c,[s,Object(r["m"])(u,{welcomeMessage:"Welcome to PrimeVue",prompt:"primevue $",class:"dark-demo-terminal"})])]),Object(r["m"])(b)])})),i=Object(r["m"])("h5",null,"Import",-1),p=Object(r["m"])("code",null,"\nimport Terminal from 'primevue/terminal';\nimport TerminalService from 'primevue/terminalservice';\n\n",-1),u=Object(r["m"])("h5",null,"Getting Started",-1),b=Object(r["m"])("p",null,[Object(r["l"])("Commands are processed using an EventBus implementation called TerminalService. Import this service into your component and subscribe to the "),Object(r["m"])("i",null,"command"),Object(r["l"])(" event to process the commands by sending replies with the "),Object(r["m"])("i",null,"response"),Object(r["l"])(" event.")],-1),O=Object(r["m"])("code",null,'\n<Terminal welcomeMessage="Welcome to PrimeVue" prompt="primevue $" />\n\n',-1),j=Object(r["m"])("code",null,"\nimport TerminalService from 'primevue/terminalservice';\n\nexport default {\n     methods: {\n        commandHandler(text) {\n            let response;\n            let argsIndex = text.indexOf(' ');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case \"date\":\n                    response = 'Today is ' + new Date().toDateString();\n                    break;\n\n                case \"greet\":\n                    response = 'Hola ' + text.substring(argsIndex + 1);\n                    break;\n\n                case \"random\":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = \"Unknown command: \" + command;\n            }\n\n            TerminalService.$emit('response', response);\n        }\n    },\n    mounted() {\n        TerminalService.$on('command', this.commandHandler);\n    },\n    beforeUnmount() {\n        TerminalService.$off('command', this.commandHandler);\n    }\n}\n\n",-1),f=Object(r["m"])("h5",null,"Properties",-1),v=Object(r["m"])("p",null,"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.",-1),g=Object(r["m"])("div",{class:"doc-tablewrapper"},[Object(r["m"])("table",{class:"doc-table"},[Object(r["m"])("thead",null,[Object(r["m"])("tr",null,[Object(r["m"])("th",null,"Name"),Object(r["m"])("th",null,"Type"),Object(r["m"])("th",null,"Default"),Object(r["m"])("th",null,"Description")])]),Object(r["m"])("tbody",null,[Object(r["m"])("tr",null,[Object(r["m"])("td",null,"welcomeMessage"),Object(r["m"])("td",null,"string"),Object(r["m"])("td",null,"null"),Object(r["m"])("td",null,"Initial text to display on terminal.")]),Object(r["m"])("tr",null,[Object(r["m"])("td",null,"prompt"),Object(r["m"])("td",null,"string"),Object(r["m"])("td",null,"null"),Object(r["m"])("td",null,"Prompt text for each command.")])])])],-1),h=Object(r["m"])("h5",null,"Styling",-1),x=Object(r["l"])("Following is the list of structural style classes, for theming classes visit "),k=Object(r["l"])("theming"),T=Object(r["l"])(" page."),w=Object(r["m"])("div",{class:"doc-tablewrapper"},[Object(r["m"])("table",{class:"doc-table"},[Object(r["m"])("thead",null,[Object(r["m"])("tr",null,[Object(r["m"])("th",null,"Name"),Object(r["m"])("th",null,"Element")])]),Object(r["m"])("tbody",null,[Object(r["m"])("tr",null,[Object(r["m"])("td",null,"p-terminal"),Object(r["m"])("td",null,"Container element.")]),Object(r["m"])("tr",null,[Object(r["m"])("td",null,"p-terminal-content"),Object(r["m"])("td",null,"Content of terminal.")]),Object(r["m"])("tr",null,[Object(r["m"])("td",null,"p-terminal-prompt"),Object(r["m"])("td",null,"Prompt text.")]),Object(r["m"])("tr",null,[Object(r["m"])("td",null,"p-terminal-response"),Object(r["m"])("td",null,"Command response.")]),Object(r["m"])("tr",null,[Object(r["m"])("td",null,"p-terminal-input"),Object(r["m"])("td",null,"Input element to enter commands.")])])])],-1),y=Object(r["m"])("h5",null,"Dependencies",-1),D=Object(r["m"])("p",null,"None.",-1);function S(e,n,t,a,o,m){var l=Object(r["K"])("router-link"),c=Object(r["K"])("AppDoc"),s=Object(r["L"])("code");return Object(r["C"])(),Object(r["h"])(c,{name:"TerminalDemo",sources:o.sources,github:"terminal/TerminalDemo.vue"},{default:Object(r["U"])((function(){return[i,Object(r["V"])(Object(r["m"])("pre",null,[p],512),[[s,void 0,void 0,{script:!0}]]),u,b,Object(r["V"])(Object(r["m"])("pre",null,[O],512),[[s]]),Object(r["V"])(Object(r["m"])("pre",null,[j],512),[[s,void 0,void 0,{script:!0}]]),f,v,g,h,Object(r["m"])("p",null,[x,Object(r["m"])(l,{to:"/theming"},{default:Object(r["U"])((function(){return[k]})),_:1}),T]),w,y,D]})),_:1},8,["sources"])}var I={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <p>Enter "date" to display the current date, "greet {0}" for a message and "random" to get a random number.</p>\n        <Terminal welcomeMessage="Welcome to PrimeVue" prompt="primevue $" class="dark-demo-terminal" />\n    </div>\n</template>\n\n<script>\nimport TerminalService from "primevue/terminalservice";\n\nexport default {\n    methods: {\n        commandHandler(text) {\n            let response;\n            let argsIndex = text.indexOf(\' \');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case "date":\n                    response = \'Today is \' + new Date().toDateString();\n                    break;\n\n                case "greet":\n                    response = \'Hola \' + text.substring(argsIndex + 1);\n                    break;\n\n                case "random":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = "Unknown command: " + command;\n            }\n            \n            TerminalService.emit(\'response\', response);\n        }\n    },\n    mounted() {\n        TerminalService.on(\'command\', this.commandHandler);\n    },\n    beforeUnmount() {\n        TerminalService.off(\'command\', this.commandHandler);\n    }\n}\n<\\/script>\n\n<style lang="scss" scoped>\np {\n    margin-top: 0;\n}\n\n::v-deep(.dark-demo-terminal) {\n    background-color: #212121;\n    color: #ffffff;\n\n    .p-terminal-command {\n        color: #80CBC4;\n    }\n\n    .p-terminal-prompt {\n        color: #FFD54F;\n    }\n\n    .p-terminal-response {\n        color: #9FA8DA;\n    }\n}\n</style>'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <p>Enter "date" to display the current date, "greet {0}" for a message and "random" to get a random number.</p>\n        <Terminal welcomeMessage="Welcome to PrimeVue" prompt="primevue $" class="dark-demo-terminal" />\n    </div>\n</template>\n\n<script>\nimport { onMounted, onBeforeUnmount } from \'vue\';\nimport TerminalService from "primevue/terminalservice";\n\nexport default {\n    setup() {\n        onMounted(() => {\n            TerminalService.on(\'command\', commandHandler);\n        })\n\n        onBeforeUnmount(() => {\n            TerminalService.off(\'command\', commandHandler);\n        })\n\n        const commandHandler = (text) => {\n            let response;\n            let argsIndex = text.indexOf(\' \');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case "date":\n                    response = \'Today is \' + new Date().toDateString();\n                    break;\n\n                case "greet":\n                    response = \'Hola \' + text.substring(argsIndex + 1);\n                    break;\n\n                case "random":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = "Unknown command: " + command;\n            }\n            \n            TerminalService.emit(\'response\', response);\n        }\n\n        return { commandHandler }\n    }\n}\n<\\/script>\n\n<style lang="scss" scoped>\np {\n    margin-top: 0;\n}\n\n::v-deep(.dark-demo-terminal) {\n    background-color: #212121;\n    color: #ffffff;\n\n    .p-terminal-command {\n        color: #80CBC4;\n    }\n\n    .p-terminal-prompt {\n        color: #FFD54F;\n    }\n\n    .p-terminal-response {\n        color: #9FA8DA;\n    }\n}\n</style>'}}}}};I.render=S;var M=I,H=t("bd7f"),C={methods:{commandHandler:function(e){var n,t=e.indexOf(" "),r=-1!==t?e.substring(0,t):e;switch(r){case"date":n="Today is "+(new Date).toDateString();break;case"greet":n="Hola "+e.substring(t+1);break;case"random":n=Math.floor(100*Math.random());break;default:n="Unknown command: "+r}H["a"].emit("response",n)}},mounted:function(){H["a"].on("command",this.commandHandler)},beforeUnmount:function(){H["a"].off("command",this.commandHandler)},components:{TerminalDoc:M}};t("0db1");C.render=d,C.__scopeId="data-v-7963fce0";n["default"]=C}}]);