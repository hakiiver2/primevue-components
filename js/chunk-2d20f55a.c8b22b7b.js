(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d20f55a"],{b2d8:function(e,t,l){"use strict";l.r(t);var n=l("7a23"),c={class:"content-section introduction"},u=Object(n["m"])("div",{class:"feature-intro"},[Object(n["m"])("h1",null,"Chips"),Object(n["m"])("p",null,"Chips is used to enter multiple values on an input field.")],-1),a={class:"content-section implementation p-fluid"},m={class:"card"},o=Object(n["m"])("h5",null,"Basic",-1),i=Object(n["m"])("h5",null,"Comma Separator",-1),s=Object(n["m"])("h5",null,"Template",-1),b=Object(n["m"])("i",{class:"pi pi-user-plus",style:{"font-size":"14px"}},null,-1);function r(e,t,l,r,p,d){var O=Object(n["K"])("AppDemoActions"),j=Object(n["K"])("Chips"),h=Object(n["K"])("ChipsDoc");return Object(n["C"])(),Object(n["h"])("div",null,[Object(n["m"])("div",c,[u,Object(n["m"])(O)]),Object(n["m"])("div",a,[Object(n["m"])("div",m,[o,Object(n["m"])(j,{modelValue:p.value1,"onUpdate:modelValue":t[1]||(t[1]=function(e){return p.value1=e})},null,8,["modelValue"]),i,Object(n["m"])(j,{modelValue:p.value2,"onUpdate:modelValue":t[2]||(t[2]=function(e){return p.value2=e}),separator:","},null,8,["modelValue"]),s,Object(n["m"])(j,{modelValue:p.value3,"onUpdate:modelValue":t[3]||(t[3]=function(e){return p.value3=e})},{chip:Object(n["U"])((function(e){return[Object(n["m"])("div",null,[Object(n["m"])("span",null,Object(n["O"])(e.value)+" - (active) ",1),b])]})),_:1},8,["modelValue"])])]),Object(n["m"])(h)])}var p=Object(n["m"])("h5",null,"Import",-1),d=Object(n["m"])("code",null,"\nimport Chips from 'primevue/chips';\n\n",-1),O=Object(n["m"])("h5",null,"Getting Started",-1),j=Object(n["m"])("p",null,"An array as the value can be bound using the standard v-model directive.",-1),h=Object(n["m"])("code",null,'\n<Chips v-model="value" />\n\n',-1),v=Object(n["m"])("h5",null,"Custom Content",-1),f=Object(n["m"])("p",null,[Object(n["l"])("A chip is customized using the "),Object(n["m"])("i",null,"chip"),Object(n["l"])(" template where the chip value is passed to the slotProps with the value property.")],-1),C=Object(n["m"])("code",null,[Object(n["m"])("template",null,'\n<Chips v-model="value">\n\t<template #chip="slotProps">\n\t\t<div>\n\t\t\t<span>{{slotProps.value}} - (active) </span>\n\t\t\t<i class="pi pi-user-plus" style="font-size: 14px"></i>\n\t\t</div>\n\t</template>\n</Chips>\n'),Object(n["l"])("\n")],-1),w=Object(n["m"])("h5",null,"Properties",-1),y=Object(n["m"])("p",null,"Any property such as name and placeholder are passed to the underlying input element. Following are the additional properties to configure the component.",-1),g=Object(n["m"])("div",{class:"doc-tablewrapper"},[Object(n["m"])("table",{class:"doc-table"},[Object(n["m"])("thead",null,[Object(n["m"])("tr",null,[Object(n["m"])("th",null,"Name"),Object(n["m"])("th",null,"Type"),Object(n["m"])("th",null,"Default"),Object(n["m"])("th",null,"Description")])]),Object(n["m"])("tbody",null,[Object(n["m"])("tr",null,[Object(n["m"])("td",null,"modelValue"),Object(n["m"])("td",null,"array"),Object(n["m"])("td",null,"null"),Object(n["m"])("td",null,"Value of the component.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"max"),Object(n["m"])("td",null,"number"),Object(n["m"])("td",null,"null"),Object(n["m"])("td",null,"Maximum number of entries allowed.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"separator"),Object(n["m"])("td",null,"string"),Object(n["m"])("td",null,"null"),Object(n["m"])("td",null,'Separator char to add an item when pressed in addition to the enter key. Currently only possible value is ","')]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"addOnBlur"),Object(n["m"])("td",null,"boolean"),Object(n["m"])("td",null,"false"),Object(n["m"])("td",null,"Whether to add an item when the input loses focus.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"allowDuplicate"),Object(n["m"])("td",null,"boolean"),Object(n["m"])("td",null,"true"),Object(n["m"])("td",null,"Whether to allow duplicate values or not.")])])])],-1),V=Object(n["m"])("h5",null,"Events",-1),k=Object(n["m"])("p",null,"Any valid event such as focus, blur and input are passed to the underlying input element. Following are the additional events to configure the component.",-1),P=Object(n["m"])("div",{class:"doc-tablewrapper"},[Object(n["m"])("table",{class:"doc-table"},[Object(n["m"])("thead",null,[Object(n["m"])("tr",null,[Object(n["m"])("th",null,"Name"),Object(n["m"])("th",null,"Parameters"),Object(n["m"])("th",null,"Description")])]),Object(n["m"])("tbody",null,[Object(n["m"])("tr",null,[Object(n["m"])("td",null,"add"),Object(n["m"])("td",null,[Object(n["l"])("originalEvent: Browser event "),Object(n["m"])("br"),Object(n["l"])(" value: Added item value")]),Object(n["m"])("td",null,"Callback to invoke when a chip is added.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"remove"),Object(n["m"])("td",null,[Object(n["l"])("originalEvent: Browser event "),Object(n["m"])("br"),Object(n["l"])(" value: Removed item value")]),Object(n["m"])("td",null,"Callback to invoke when a chip is removed.")])])])],-1),D=Object(n["m"])("h5",null,"Slots",-1),A=Object(n["m"])("div",{class:"doc-tablewrapper"},[Object(n["m"])("table",{class:"doc-table"},[Object(n["m"])("thead",null,[Object(n["m"])("tr",null,[Object(n["m"])("th",null,"Name"),Object(n["m"])("th",null,"Parameters")])]),Object(n["m"])("tbody",null,[Object(n["m"])("tr",null,[Object(n["m"])("td",null,"chip"),Object(n["m"])("td",null,"value: Value of the component")])])])],-1),S=Object(n["m"])("h5",null,"Styling",-1),x=Object(n["l"])("Following is the list of structural style classes, for theming classes visit "),N=Object(n["l"])("theming"),B=Object(n["l"])(" page."),U=Object(n["m"])("div",{class:"doc-tablewrapper"},[Object(n["m"])("table",{class:"doc-table"},[Object(n["m"])("thead",null,[Object(n["m"])("tr",null,[Object(n["m"])("th",null,"Name"),Object(n["m"])("th",null,"Element")])]),Object(n["m"])("tbody",null,[Object(n["m"])("tr",null,[Object(n["m"])("td",null,"p-chips"),Object(n["m"])("td",null,"Container element")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"p-chips-token"),Object(n["m"])("td",null,"Chip element container.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"p-chips-token-icon"),Object(n["m"])("td",null,"Icon of a chip.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"p-chips-token-label"),Object(n["m"])("td",null,"label of a chip.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"p-chips-input-token"),Object(n["m"])("td",null,"Container of input element.")])])])],-1),z=Object(n["m"])("h5",null,"Dependencies",-1),K=Object(n["m"])("p",null,"None.",-1);function E(e,t,l,c,u,a){var m=Object(n["K"])("router-link"),o=Object(n["K"])("AppDoc"),i=Object(n["L"])("code");return Object(n["C"])(),Object(n["h"])(o,{name:"ChipsDemo",sources:u.sources,github:"chips/ChipsDemo.vue"},{default:Object(n["U"])((function(){return[p,Object(n["V"])(Object(n["m"])("pre",null,[d],512),[[i,void 0,void 0,{script:!0}]]),O,j,Object(n["V"])(Object(n["m"])("pre",null,[h],512),[[i]]),v,f,Object(n["V"])(Object(n["m"])("pre",null,[C],512),[[i]]),w,y,g,V,k,P,D,A,S,Object(n["m"])("p",null,[x,Object(n["m"])(m,{to:"/theming"},{default:Object(n["U"])((function(){return[N]})),_:1}),B]),U,z,K]})),_:1},8,["sources"])}var I={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div class="p-fluid">\n        <div class="card">\n            <h5>Basic</h5>\n            <Chips v-model="value1" />\n\n            <h5>Comma Separator</h5>\n            <Chips v-model="value2" separator="," />\n\n            <h5>Template</h5>\n            <Chips v-model="value3">\n                <template #chip="slotProps">\n                    <div>\n                        <span>{{slotProps.value}} - (active) </span>\n                        <i class="pi pi-user-plus" style="font-size: 14px"></i>\n                    </div>\n                </template>\n            </Chips>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            value1: null,\n            value2: null,\n            value3: null\n        }\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div class="p-fluid">\n        <div class="card">\n            <h5>Basic</h5>\n            <Chips v-model="value1" />\n\n            <h5>Comma Separator</h5>\n            <Chips v-model="value2" separator="," />\n\n            <h5>Template</h5>\n            <Chips v-model="value3">\n                <template #chip="slotProps">\n                    <div>\n                        <span>{{slotProps.value}} - (active) </span>\n                        <i class="pi pi-user-plus" style="font-size: 14px"></i>\n                    </div>\n                </template>\n            </Chips>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \'vue\';\n\nexport default {\n    setup() {\n        const value1 = ref();\n        const value2 = ref();\n        const value3 = ref();\n\n        return { value1, value2, value3 }\n    }\n}\n<\\/script>\n\n'}}}}};I.render=E;var T=I,F={data:function(){return{value1:null,value2:null,value3:null}},components:{ChipsDoc:T}};F.render=r;t["default"]=F}}]);