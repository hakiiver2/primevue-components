(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0aa93c"],{1238:function(t,e,n){"use strict";n.r(e);var l=n("7a23"),o={class:"content-section introduction"},i=Object(l["m"])("div",{class:"feature-intro"},[Object(l["m"])("h1",null,"SelectButton"),Object(l["m"])("p",null,"SelectButton is a form component to choose a value from a list of options using button elements.")],-1),c={class:"content-section implementation"},u={class:"card"},a=Object(l["m"])("h5",null,"Single Selection",-1),m=Object(l["m"])("h5",null,"Multiple Selection",-1),p=Object(l["m"])("h5",null,"Custom Content",-1);function s(t,e,n,s,b,r){var O=Object(l["K"])("AppDemoActions"),d=Object(l["K"])("SelectButton"),j=Object(l["K"])("SelectButtonDoc");return Object(l["C"])(),Object(l["h"])("div",null,[Object(l["m"])("div",o,[i,Object(l["m"])(O)]),Object(l["m"])("div",c,[Object(l["m"])("div",u,[a,Object(l["m"])(d,{modelValue:b.value1,"onUpdate:modelValue":e[1]||(e[1]=function(t){return b.value1=t}),options:b.options},null,8,["modelValue","options"]),m,Object(l["m"])(d,{modelValue:b.value2,"onUpdate:modelValue":e[2]||(e[2]=function(t){return b.value2=t}),options:b.paymentOptions,optionLabel:"name",multiple:""},null,8,["modelValue","options"]),p,Object(l["m"])(d,{modelValue:b.value3,"onUpdate:modelValue":e[3]||(e[3]=function(t){return b.value3=t}),options:b.justifyOptions,dataKey:"value"},{option:Object(l["U"])((function(t){return[Object(l["m"])("i",{class:t.option.icon},null,2)]})),_:1},8,["modelValue","options"])])]),Object(l["m"])(j)])}var b=Object(l["m"])("h5",null,"Import",-1),r=Object(l["m"])("code",null,"\nimport SelectButton from 'primevue/selectbutton';\n\n",-1),O=Object(l["m"])("h5",null,"Getting Started",-1),d=Object(l["m"])("p",null,[Object(l["l"])("SelectButton requires a value to bind and a collection of arbitrary objects along with the "),Object(l["m"])("i",null,"optionLabel"),Object(l["l"])(" property to specify the label property of the option.")],-1),j=Object(l["m"])("code",null,'\n<SelectButton v-model="selectedCity" :options="cities" optionLabel="name" />\n\n',-1),v=Object(l["m"])("code",null,"\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tselectedCity: null,\n\t\t\tcities: [\n\t\t\t\t{name: 'London', code: 'LND'},\n\t\t\t\t{name: 'Paris', code: 'PRS'},\n\t\t\t\t{name: 'Rome', code: 'RM'}\n\t\t\t]\n\t\t}\n\t}\n}\n\n",-1),f=Object(l["m"])("h5",null,"Multiple",-1),h=Object(l["m"])("p",null,[Object(l["l"])("SelectButton allows selecting only one item by default and setting "),Object(l["m"])("i",null,"multiple"),Object(l["l"])(" option enables choosing more than one item. In multiple case, model property should be an array.")],-1),y=Object(l["m"])("code",null,'\n<SelectButton v-model="selectedCity" :options="cities" optionLabel="brand" :multiple="true" />\n\n',-1),g=Object(l["m"])("h5",null,"Templating",-1),S=Object(l["m"])("p",null,[Object(l["l"])("Label of an option is used as the display text of an item by default, for custom content support define an "),Object(l["m"])("i",null,"option"),Object(l["l"])(" template that gets the option instance as a parameter.")],-1),B=Object(l["m"])("code",null,[Object(l["m"])("template",null,'\n<SelectButton v-model="selectedCar" :options="cars" optionLabel="brand">\n\t<template #option="slotProps">\n        <div class="car-option">\n            <img :alt="slotProps.option.brand" :src="\'demo/images/car/\' + slotProps.option.brand + \'.png\'" />\n            <div>{{slotProps.option.brand}}</div>\n        </div>\n\t</template>\n</SelectButton>\n'),Object(l["l"])("\n")],-1),w=Object(l["m"])("h5",null,"Properties",-1),C=Object(l["m"])("p",null,"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.",-1),P=Object(l["m"])("div",{class:"doc-tablewrapper"},[Object(l["m"])("table",{class:"doc-table"},[Object(l["m"])("thead",null,[Object(l["m"])("tr",null,[Object(l["m"])("th",null,"Name"),Object(l["m"])("th",null,"Type"),Object(l["m"])("th",null,"Default"),Object(l["m"])("th",null,"Description")])]),Object(l["m"])("tbody",null,[Object(l["m"])("tr",null,[Object(l["m"])("td",null,"modelValue"),Object(l["m"])("td",null,"any"),Object(l["m"])("td",null,"null"),Object(l["m"])("td",null,"Value of the component.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"options"),Object(l["m"])("td",null,"array"),Object(l["m"])("td",null,"null"),Object(l["m"])("td",null,"An array of selectitems to display as the available options.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"optionLabel"),Object(l["m"])("td",null,"string"),Object(l["m"])("td",null,"null"),Object(l["m"])("td",null,"Property name or getter function to use as the label of an option.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"optionValue"),Object(l["m"])("td",null,"string"),Object(l["m"])("td",null,"null"),Object(l["m"])("td",null,"Property name or getter function to use as the value of an option, defaults to the option itself when not defined.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"optionDisabled"),Object(l["m"])("td",null,"boolean"),Object(l["m"])("td",null,"null"),Object(l["m"])("td",null,"Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"multiple"),Object(l["m"])("td",null,"boolean"),Object(l["m"])("td",null,"false"),Object(l["m"])("td",null,"When specified, allows selecting multiple values.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"disabled"),Object(l["m"])("td",null,"boolean"),Object(l["m"])("td",null,"false"),Object(l["m"])("td",null,"When present, it specifies that the element should be disabled.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"dataKey"),Object(l["m"])("td",null,"string"),Object(l["m"])("td",null,"null"),Object(l["m"])("td",null,"A property to uniquely identify an option.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"ariaLabelledBy"),Object(l["m"])("td",null,"string"),Object(l["m"])("td",null,"null"),Object(l["m"])("td",null,"Establishes relationships between the component and label(s) where its value should be one or more element IDs.")])])])],-1),V=Object(l["m"])("h5",null,"Events",-1),D=Object(l["m"])("div",{class:"doc-tablewrapper"},[Object(l["m"])("table",{class:"doc-table"},[Object(l["m"])("thead",null,[Object(l["m"])("tr",null,[Object(l["m"])("th",null,"Name"),Object(l["m"])("th",null,"Parameters"),Object(l["m"])("th",null,"Description")])]),Object(l["m"])("tbody",null,[Object(l["m"])("tr",null,[Object(l["m"])("td",null,"focus"),Object(l["m"])("td",null,"event: Browser event"),Object(l["m"])("td",null,"Callback to invoke on focus.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"blur"),Object(l["m"])("td",null,"event: Browser event"),Object(l["m"])("td",null,"Callback to invoke on blur.")])])])],-1),L=Object(l["m"])("h5",null,"Slots",-1),A=Object(l["m"])("div",{class:"doc-tablewrapper"},[Object(l["m"])("table",{class:"doc-table"},[Object(l["m"])("thead",null,[Object(l["m"])("tr",null,[Object(l["m"])("th",null,"Name"),Object(l["m"])("th",null,"Parameters")])]),Object(l["m"])("tbody",null,[Object(l["m"])("tr",null,[Object(l["m"])("td",null,"option"),Object(l["m"])("td",null,[Object(l["l"])("option: Option instance"),Object(l["m"])("br"),Object(l["l"])(" index: Index of the option")])])])])],-1),K=Object(l["m"])("h5",null,"Dependencies",-1),k=Object(l["m"])("p",null,"None.",-1);function N(t,e,n,o,i,c){var u=Object(l["K"])("AppDoc"),a=Object(l["L"])("code");return Object(l["C"])(),Object(l["h"])(u,{name:"SelectButtonDemo",sources:i.sources,github:"selectbutton/SelectButtonDemo.vue"},{default:Object(l["U"])((function(){return[b,Object(l["V"])(Object(l["m"])("pre",null,[r],512),[[a,void 0,void 0,{script:!0}]]),O,d,Object(l["V"])(Object(l["m"])("pre",null,[j],512),[[a]]),Object(l["V"])(Object(l["m"])("pre",null,[v],512),[[a,void 0,void 0,{script:!0}]]),f,h,Object(l["V"])(Object(l["m"])("pre",null,[y],512),[[a]]),g,S,Object(l["V"])(Object(l["m"])("pre",null,[B],512),[[a]]),w,C,P,V,D,L,A,K,k]})),_:1},8,["sources"])}var x={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:"\n<template>\n    <div>\n        <h5>Single Selection</h5>\n        <SelectButton v-model=\"value1\" :options=\"options\" />\n\n        <h5>Multiple Selection</h5>\n        <SelectButton v-model=\"value2\" :options=\"paymentOptions\" optionLabel=\"name\" multiple />\n\n        <h5>Custom Content</h5>\n        <SelectButton v-model=\"value3\" :options=\"justifyOptions\" dataKey=\"value\">\n            <template #option=\"slotProps\">\n                <i :class=\"slotProps.option.icon\"></i>\n            </template>\n        </SelectButton>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            value1: 'Off',\n            value2: null,\n            value3: null,\n            options: ['Off', 'On'],\n            paymentOptions: [\n                {name: 'Option 1', value: 1},\n                {name: 'Option 2', value: 2},\n                {name: 'Option 3', value: 3}\n            ],\n            justifyOptions: [\n                {icon: 'pi pi-align-left', value: 'left'},\n                {icon: 'pi pi-align-right', value: 'Right'},\n                {icon: 'pi pi-align-center', value: 'Center'},\n                {icon: 'pi pi-align-justify', value: 'Justify'}]\n        }\n    }\n}\n<\\/script>\n"},"composition-api":{tabName:"Composition API Source",content:"\n<template>\n    <div>\n        <h5>Single Selection</h5>\n        <SelectButton v-model=\"value1\" :options=\"options\" />\n\n        <h5>Multiple Selection</h5>\n        <SelectButton v-model=\"value2\" :options=\"paymentOptions\" optionLabel=\"name\" multiple />\n\n        <h5>Custom Content</h5>\n        <SelectButton v-model=\"value3\" :options=\"justifyOptions\" dataKey=\"value\">\n            <template #option=\"slotProps\">\n                <i :class=\"slotProps.option.icon\"></i>\n            </template>\n        </SelectButton>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const value1 = ref('Off');\n        const value2 = ref();\n        const value3 = ref();\n        const options = ref(['Off', 'On']);\n        const paymentOptions = ref([\n            {name: 'Option 1', value: 1},\n            {name: 'Option 2', value: 2},\n            {name: 'Option 3', value: 3}\n        ]);\n        const justifyOptions = ref([\n            {icon: 'pi pi-align-left', value: 'left'},\n            {icon: 'pi pi-align-right', value: 'Right'},\n            {icon: 'pi pi-align-center', value: 'Center'},\n            {icon: 'pi pi-align-justify', value: 'Justify'}\n        ]);\n\n        return { value1, value2, value3, options, paymentOptions, justifyOptions }\n    }\n}\n<\\/script>\n"}}}}};x.render=N;var I=x,R={data:function(){return{value1:"Off",value2:null,value3:null,options:["Off","On"],paymentOptions:[{name:"Option 1",value:1},{name:"Option 2",value:2},{name:"Option 3",value:3}],justifyOptions:[{icon:"pi pi-align-left",value:"left"},{icon:"pi pi-align-right",value:"Right"},{icon:"pi pi-align-center",value:"Center"},{icon:"pi pi-align-justify",value:"Justify"}]}},components:{SelectButtonDoc:I}};R.render=s;e["default"]=R}}]);