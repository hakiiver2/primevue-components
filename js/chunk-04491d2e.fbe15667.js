(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-04491d2e"],{"142f":function(e,t,l){"use strict";l("d6f9")},4739:function(e,t,l){"use strict";l.r(t);var n=l("7a23"),c=Object(n["Y"])("data-v-3a2124b0");Object(n["F"])("data-v-3a2124b0");var a={class:"content-section introduction"},o=Object(n["m"])("div",{class:"feature-intro"},[Object(n["m"])("h1",null,"FileUpload"),Object(n["m"])("p",null,"FileUpload is an advanced uploader with dragdrop support, multi file uploads, auto uploading, progress tracking and validations.")],-1),u={class:"content-section implementation"},m={class:"card"},i=Object(n["m"])("h5",null,"Advanced",-1),b=Object(n["m"])("p",null,"Drag and drop files to here to upload.",-1),d=Object(n["m"])("h5",null,"Basic",-1),s=Object(n["m"])("h5",null,"Basic with Auto",-1);Object(n["D"])();var r=c((function(e,t,l,r,O,j){var p=Object(n["K"])("AppDemoActions"),h=Object(n["K"])("FileUpload"),f=Object(n["K"])("FileUploadDoc");return Object(n["C"])(),Object(n["h"])("div",null,[Object(n["m"])("div",a,[o,Object(n["m"])(p)]),Object(n["m"])("div",u,[Object(n["m"])("div",m,[i,Object(n["m"])(h,{name:"demo[]",url:"./upload.php",onUpload:j.onUpload,multiple:!0,accept:"image/*",maxFileSize:1e6},{empty:c((function(){return[b]})),_:1},8,["onUpload"]),d,Object(n["m"])(h,{mode:"basic",name:"demo[]",url:"./upload.php",accept:"image/*",maxFileSize:1e6,onUpload:j.onUpload},null,8,["onUpload"]),s,Object(n["m"])(h,{mode:"basic",name:"demo[]",url:"./upload.php",accept:"image/*",maxFileSize:1e6,onUpload:j.onUpload,auto:!0,chooseLabel:"Browse"},null,8,["onUpload"])])]),Object(n["m"])(f)])})),O=Object(n["m"])("h5",null,"Import",-1),j=Object(n["m"])("code",null,"\nimport FileUpload from 'primevue/fileupload';\n\n",-1),p=Object(n["m"])("h5",null,"Getting Started",-1),h=Object(n["m"])("p",null,[Object(n["l"])("FileUpload requires a "),Object(n["m"])("i",null,"url"),Object(n["l"])(" property as the upload target and a "),Object(n["m"])("i",null,"name"),Object(n["l"])(" to identify the files at backend.")],-1),f=Object(n["m"])("code",null,'\n<FileUpload name="demo[]" url="./upload" />\n\n',-1),v=Object(n["m"])("h5",null,"Multiple Uploads",-1),g=Object(n["m"])("p",null,[Object(n["l"])("Only one file can be selected at a time by default, to allow selecting multiple files at once enable "),Object(n["m"])("i",null,"multiple"),Object(n["l"])(" option.")],-1),U=Object(n["m"])("code",null,'\n<FileUpload name="demo[]" url="./upload" :multiple="true" />\n\n',-1),F=Object(n["m"])("h5",null,"Basic UI",-1),y=Object(n["m"])("p",null,"FileUpload basic mode provides a simpler UI as an alternative to advanced mode.",-1),w=Object(n["m"])("code",null,'\n<FileUpload mode="basic" name="demo[]" url="./upload" />\n\n',-1),x=Object(n["m"])("h5",null,"DragDrop",-1),z=Object(n["m"])("p",null,"File selection can also be done by dragging and dropping from the filesystem to the content section of the component.",-1),k=Object(n["m"])("h5",null,"Auto Uploads",-1),D=Object(n["m"])("p",null,[Object(n["l"])("When "),Object(n["m"])("i",null,"auto"),Object(n["l"])(" property is enabled, upload begins as soon as file selection is completed or a file is dropped on the drop area.")],-1),S=Object(n["m"])("code",null,'\n<FileUpload mode="basic" name="demo[]" url="./upload" :auto="true" />\n\n',-1),L=Object(n["m"])("h5",null,"File Types",-1),C=Object(n["m"])("p",null,[Object(n["l"])("Selectable file types can be restricted with "),Object(n["m"])("i",null,"accept"),Object(n["l"])(" property, example below only allows images to be uploaded. Read more about other possible values "),Object(n["m"])("a",{href:"https://www.w3schools.com/tags/att_input_accept.asp"}," here"),Object(n["l"])(".")],-1),M=Object(n["m"])("code",null,'\n<FileUpload mode="basic" name="demo[]" url="./upload" accept="image/*" />\n\n',-1),V=Object(n["m"])("h5",null,"File Size and File Limit",-1),A=Object(n["m"])("p",null,[Object(n["l"])("Maximium file size can be restricted using "),Object(n["m"])("i",null,"maxFileSize"),Object(n["l"])(" property defined in bytes. Similarly "),Object(n["m"])("i",null,"fileLimit"),Object(n["l"])(" is available to restrict the number of files to be uploaded.")],-1),_=Object(n["m"])("code",null,'\n<FileUpload name="demo[]" url="./upload" :maxFileSize="1000000" :fileLimit="3" />\n\n',-1),q=Object(n["m"])("p",null,[Object(n["l"])("In order to customize the default messages use "),Object(n["m"])("i",null,"invalidFileSizeMessage"),Object(n["l"])(" and "),Object(n["m"])("i",null,"invalidFileLimitMessage"),Object(n["l"])(" options where {0} placeholder refers to the filename and {1} the file size.")],-1),B=Object(n["m"])("ul",null,[Object(n["m"])("li",null," invalidFileSizeMessage: '{0}: Invalid file size, file size should be smaller than {1}.' "),Object(n["m"])("li",null," invalidFileLimitMessage: 'Maximum number of files exceeded, limit is {0} at most.' ")],-1),I=Object(n["m"])("h5",null,"Request Customization",-1),P=Object(n["m"])("p",null,"XHR request to upload the files can be customized using the before-upload callback that passes the xhr instance and FormData object as event parameters.",-1),R=Object(n["m"])("h5",null,"Custom Upload",-1),N=Object(n["m"])("p",null,[Object(n["l"])("Uploading implementation can be overridden by enabling "),Object(n["m"])("i",null,"customMode"),Object(n["l"])(" property and defining a custom upload handler event.")],-1),T=Object(n["m"])("code",null,'\n<FileUpload name="demo[]" :customUpload="true" @uploader="myUploader" />\n\n',-1),W=Object(n["m"])("code",null,"\nmyUploader(event) {\n    //event.files == files to upload\n}\n\n",-1),H=Object(n["m"])("h5",null,"Empty Template",-1),E=Object(n["m"])("p",null,"When there is no file selected, you may use the empty slot to display content.",-1),K=Object(n["m"])("code",null,'\n<FileUpload name="demo[]" url="./upload">\n    <template #empty>\n        <p>Drag and drop files to here to upload.</p>\n    </template>\n</FileUpload>\n\n',-1),X=Object(n["m"])("h5",null,"Properties",-1),J={class:"doc-tablewrapper"},$={class:"doc-table"},G=Object(n["m"])("thead",null,[Object(n["m"])("tr",null,[Object(n["m"])("th",null,"Name"),Object(n["m"])("th",null,"Type"),Object(n["m"])("th",null,"Default"),Object(n["m"])("th",null,"Description")])],-1),Y=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"name"),Object(n["m"])("td",null,"string"),Object(n["m"])("td",null,"null"),Object(n["m"])("td",null,"Name of the request parameter to identify the files at backend.")],-1),Q=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"url"),Object(n["m"])("td",null,"string"),Object(n["m"])("td",null,"null"),Object(n["m"])("td",null,"Remote url to upload the files.")],-1),Z=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"mode"),Object(n["m"])("td",null,"string"),Object(n["m"])("td",null,"advanced"),Object(n["m"])("td",null,'Defines the UI of the component, possible values are "advanced" and "basic".')],-1),ee=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"multiple"),Object(n["m"])("td",null,"boolean"),Object(n["m"])("td",null,"false"),Object(n["m"])("td",null,"Used to select multiple files at once from file dialog.")],-1),te=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"accept"),Object(n["m"])("td",null,"string"),Object(n["m"])("td",null,"null"),Object(n["m"])("td",null,'Pattern to restrict the allowed file types such as "image/*".')],-1),le=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"disabled"),Object(n["m"])("td",null,"boolean"),Object(n["m"])("td",null,"false"),Object(n["m"])("td",null,"Disables the upload functionality.")],-1),ne=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"auto"),Object(n["m"])("td",null,"boolean"),Object(n["m"])("td",null,"false"),Object(n["m"])("td",null,"When enabled, upload begins automatically after selection is completed.")],-1),ce=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"maxFileSize"),Object(n["m"])("td",null,"number"),Object(n["m"])("td",null,"null"),Object(n["m"])("td",null,"Maximum file size allowed in bytes.")],-1),ae=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"invalidFileSizeMessage"),Object(n["m"])("td",null,"string"),Object(n["m"])("td",null,'"{0}: Invalid file size, file size should be smaller than {1}."'),Object(n["m"])("td",null,"Message of the invalid fize size.")],-1),oe=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"invalidFileLimitMessage"),Object(n["m"])("td",null,"string"),Object(n["m"])("td",null,"Maximum number of files exceeded, limit is {0} at most."),Object(n["m"])("td",null,"Message to display when number of files to be uploaded exceeeds the limit.")],-1),ue=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"fileLimit"),Object(n["m"])("td",null,"number"),Object(n["m"])("td",null,"null"),Object(n["m"])("td",null,"Maximum number of files that can be uploaded.")],-1),me=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"withCredentials"),Object(n["m"])("td",null,"boolean"),Object(n["m"])("td",null,"false"),Object(n["m"])("td",null,"Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates.")],-1),ie=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"previewWidth"),Object(n["m"])("td",null,"number"),Object(n["m"])("td",null,"50"),Object(n["m"])("td",null,"Width of the image thumbnail in pixels.")],-1),be=Object(n["m"])("td",null,"chooseLabel",-1),de=Object(n["m"])("td",null,"string",-1),se=Object(n["m"])("td",null,"null",-1),re=Object(n["l"])("Label of the choose button. Defaults to PrimeVue "),Oe=Object(n["l"])("Locale"),je=Object(n["l"])(" configuration."),pe=Object(n["m"])("td",null,"uploadLabel",-1),he=Object(n["m"])("td",null,"string",-1),fe=Object(n["m"])("td",null,"Upload",-1),ve=Object(n["l"])("Label of the upload button. Defaults to PrimeVue "),ge=Object(n["l"])("Locale"),Ue=Object(n["l"])(" configuration."),Fe=Object(n["m"])("td",null,"cancelLabel",-1),ye=Object(n["m"])("td",null,"string",-1),we=Object(n["m"])("td",null,"Cancel",-1),xe=Object(n["l"])("Label of the cancel button. Defaults to PrimeVue "),ze=Object(n["l"])("Locale"),ke=Object(n["l"])(" configuration."),De=Object(n["m"])("td",null,"customUpload",-1),Se=Object(n["m"])("td",null,"boolean",-1),Le=Object(n["m"])("td",null,"false",-1),Ce=Object(n["l"])("Whether to use the default upload or a manual implementation defined in uploadHandler callback. Defaults to PrimeVue "),Me=Object(n["l"])("Locale"),Ve=Object(n["l"])(" configuration."),Ae=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"showUploadButton"),Object(n["m"])("td",null,"boolean"),Object(n["m"])("td",null,"true"),Object(n["m"])("td",null,"Whether to show the upload button.")],-1),_e=Object(n["m"])("tr",null,[Object(n["m"])("td",null,"showCancelButton"),Object(n["m"])("td",null,"boolean"),Object(n["m"])("td",null,"true"),Object(n["m"])("td",null,"Whether to show the cancel button.")],-1),qe=Object(n["m"])("h5",null,"Events",-1),Be=Object(n["m"])("div",{classe:"doc-tablewrapper"},[Object(n["m"])("table",{class:"doc-table"},[Object(n["m"])("thead",null,[Object(n["m"])("tr",null,[Object(n["m"])("th",null,"Name"),Object(n["m"])("th",null,"Parameters"),Object(n["m"])("th",null,"Description")])]),Object(n["m"])("tbody",null,[Object(n["m"])("tr",null,[Object(n["m"])("td",null,"before-upload"),Object(n["m"])("td",null,[Object(n["l"])("event.xhr: XmlHttpRequest instance. "),Object(n["m"])("br"),Object(n["l"])(" event.formData: FormData object.")]),Object(n["m"])("td",null,"Callback to invoke before file upload begins to customize the request such as post parameters before the files.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"before-send"),Object(n["m"])("td",null,[Object(n["l"])("event.xhr: XmlHttpRequest instance. "),Object(n["m"])("br"),Object(n["l"])(" event.formData: FormData object.")]),Object(n["m"])("td",null,"Callback to invoke before file send begins to customize the request such as adding headers.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"upload"),Object(n["m"])("td",null,[Object(n["l"])("event.xhr: XmlHttpRequest instance."),Object(n["m"])("br"),Object(n["l"])(" event.files: Uploaded files.")]),Object(n["m"])("td",null,"Callback to invoke when file upload is complete.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"error"),Object(n["m"])("td",null,[Object(n["l"])("event.xhr: XmlHttpRequest instance."),Object(n["m"])("br"),Object(n["l"])(" event.files: Files that are not uploaded.")]),Object(n["m"])("td",null,"Callback to invoke if file upload fails.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"clear"),Object(n["m"])("td",null,"-."),Object(n["m"])("td",null,"Callback to invoke when files in queue are removed without uploading.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"select"),Object(n["m"])("td",null,[Object(n["l"])("event.originalEvent: Original browser event. "),Object(n["m"])("br"),Object(n["l"])(" event.files: List of selected files.")]),Object(n["m"])("td",null,"Callback to invoke when file upload is complete.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"progress"),Object(n["m"])("td",null,[Object(n["l"])("event.originalEvent: Original browser event. "),Object(n["m"])("br"),Object(n["l"])(" event.progress: Calculated progress value.")]),Object(n["m"])("td",null,"Callback to invoke when files are selected.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"uploader"),Object(n["m"])("td",null,"event.files: List of selected files."),Object(n["m"])("td",null,"Callback to invoke to implement a custom upload.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"remove"),Object(n["m"])("td",null,[Object(n["l"])("event.file: Removed file. "),Object(n["m"])("br"),Object(n["l"])(" event.files: Remaining files to be uploaded.")]),Object(n["m"])("td",null,"Callback to invoke when a singe file is removed from the list.")])])])],-1),Ie=Object(n["m"])("h5",null,"Slots",-1),Pe=Object(n["m"])("div",{class:"doc-tablewrapper"},[Object(n["m"])("table",{class:"doc-table"},[Object(n["m"])("thead",null,[Object(n["m"])("tr",null,[Object(n["m"])("th",null,"Name"),Object(n["m"])("th",null,"Parameters")])]),Object(n["m"])("tbody",null,[Object(n["m"])("tr",null,[Object(n["m"])("td",null,"empty"),Object(n["m"])("td",null,"-")])])])],-1),Re=Object(n["m"])("h5",null,"Styling",-1),Ne=Object(n["l"])("Following is the list of structural style classes, for theming classes visit "),Te=Object(n["l"])("theming"),We=Object(n["l"])(" page."),He=Object(n["m"])("div",{class:"doc-tablewrapper"},[Object(n["m"])("table",{class:"doc-table"},[Object(n["m"])("thead",null,[Object(n["m"])("tr",null,[Object(n["m"])("th",null,"Name"),Object(n["m"])("th",null,"Element")])]),Object(n["m"])("tbody",null,[Object(n["m"])("tr",null,[Object(n["m"])("td",null,"p-fileupload"),Object(n["m"])("td",null,"Container element.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"p-fileupload-buttonbar"),Object(n["m"])("td",null,"Header containing the buttons.")]),Object(n["m"])("tr",null,[Object(n["m"])("td",null,"p-fileupload-content"),Object(n["m"])("td",null,"Content section.")])])])],-1),Ee=Object(n["m"])("h5",null,"Dependencies",-1),Ke=Object(n["m"])("p",null,"None.",-1);function Xe(e,t,l,c,a,o){var u=Object(n["K"])("router-link"),m=Object(n["K"])("AppDoc"),i=Object(n["L"])("code");return Object(n["C"])(),Object(n["h"])(m,{name:"FileUploadDemo",sources:a.sources,github:"fileupload/FileUploadDemo.vue"},{default:Object(n["U"])((function(){return[O,Object(n["V"])(Object(n["m"])("pre",null,[j],512),[[i,void 0,void 0,{script:!0}]]),p,h,Object(n["V"])(Object(n["m"])("pre",null,[f],512),[[i]]),v,g,Object(n["V"])(Object(n["m"])("pre",null,[U],512),[[i]]),F,y,Object(n["V"])(Object(n["m"])("pre",null,[w],512),[[i]]),x,z,k,D,Object(n["V"])(Object(n["m"])("pre",null,[S],512),[[i]]),L,C,Object(n["V"])(Object(n["m"])("pre",null,[M],512),[[i]]),V,A,Object(n["V"])(Object(n["m"])("pre",null,[_],512),[[i]]),q,B,I,P,R,N,Object(n["V"])(Object(n["m"])("pre",null,[T],512),[[i]]),Object(n["V"])(Object(n["m"])("pre",null,[W],512),[[i,void 0,void 0,{script:!0}]]),H,E,Object(n["V"])(Object(n["m"])("pre",null,[K],512),[[i]]),X,Object(n["m"])("div",J,[Object(n["m"])("table",$,[G,Object(n["m"])("tbody",null,[Y,Q,Z,ee,te,le,ne,ce,ae,oe,ue,me,ie,Object(n["m"])("tr",null,[be,de,se,Object(n["m"])("td",null,[re,Object(n["m"])(u,{to:"/locale"},{default:Object(n["U"])((function(){return[Oe]})),_:1}),je])]),Object(n["m"])("tr",null,[pe,he,fe,Object(n["m"])("td",null,[ve,Object(n["m"])(u,{to:"/locale"},{default:Object(n["U"])((function(){return[ge]})),_:1}),Ue])]),Object(n["m"])("tr",null,[Fe,ye,we,Object(n["m"])("td",null,[xe,Object(n["m"])(u,{to:"/locale"},{default:Object(n["U"])((function(){return[ze]})),_:1}),ke])]),Object(n["m"])("tr",null,[De,Se,Le,Object(n["m"])("td",null,[Ce,Object(n["m"])(u,{to:"/locale"},{default:Object(n["U"])((function(){return[Me]})),_:1}),Ve])]),Ae,_e])])]),qe,Be,Ie,Pe,Re,Object(n["m"])("p",null,[Ne,Object(n["m"])(u,{to:"/theming"},{default:Object(n["U"])((function(){return[Te]})),_:1}),We]),He,Ee,Ke]})),_:1},8,["sources"])}var Je={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n\t\t<Toast />\n\n        <h5>Advanced</h5>\n        <FileUpload name="demo[]" url="./upload.php" @upload="onUpload" :multiple="true" accept="image/*" :maxFileSize="1000000">\n            <template #empty>\n                <p>Drag and drop files to here to upload.</p>\n            </template>\n        </FileUpload>\n\n        <h5>Basic</h5>\n        <FileUpload mode="basic" name="demo[]" url="./upload.php" accept="image/*" :maxFileSize="1000000" @upload="onUpload" />\n\n        <h5>Basic with Auto</h5>\n        <FileUpload mode="basic" name="demo[]" url="./upload.php" accept="image/*" :maxFileSize="1000000" @upload="onUpload" :auto="true" chooseLabel="Browse" />\n    </div>\n</template>\n\n<script>\nexport default {\n    methods: {\n        onUpload() {\n            this.$toast.add({severity: \'info\', summary: \'Success\', detail: \'File Uploaded\', life: 3000});\n        }\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n\t\t<Toast />\n\n        <h5>Advanced</h5>\n        <FileUpload name="demo[]" url="./upload.php" @upload="onUpload" :multiple="true" accept="image/*" :maxFileSize="1000000">\n            <template #empty>\n                <p>Drag and drop files to here to upload.</p>\n            </template>\n        </FileUpload>\n\n        <h5>Basic</h5>\n        <FileUpload mode="basic" name="demo[]" url="./upload.php" accept="image/*" :maxFileSize="1000000" @upload="onUpload" />\n\n        <h5>Basic with Auto</h5>\n        <FileUpload mode="basic" name="demo[]" url="./upload.php" accept="image/*" :maxFileSize="1000000" @upload="onUpload" :auto="true" chooseLabel="Browse" />\n    </div>\n</template>\n\n<script>\nimport { ref } from \'vue\';\nimport { useToast } from \'primevue/usetoast\';\n\nexport default {\n\tsetup() {\n\t\tconst toast = useToast();\n\t\tconst onUpload = () => {\n            toast.add({severity: \'info\', summary: \'Success\', detail: \'File Uploaded\', life: 3000});\n        }\n\n\t\treturn { onUpload };\n\t}\n}\n<\\/script>\n'}}}}};Je.render=Xe;var $e=Je,Ge={methods:{onUpload:function(){this.$toast.add({severity:"info",summary:"Success",detail:"File Uploaded",life:3e3})}},components:{FileUploadDoc:$e}};l("142f");Ge.render=r,Ge.__scopeId="data-v-3a2124b0";t["default"]=Ge},c509:function(e,t,l){var n=l("24fb");t=n(!1),t.push([e.i,"p[data-v-3a2124b0]{margin:0}",""]),e.exports=t},d6f9:function(e,t,l){var n=l("c509");n.__esModule&&(n=n.default),"string"===typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);var c=l("499e").default;c("cd737410",n,!0,{sourceMap:!1,shadowMode:!1})}}]);