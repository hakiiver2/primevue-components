(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-c6b778c4"],{"564b":function(e,t,n){"use strict";n("d87c")},"65fd":function(e,t,n){"use strict";n.r(t);var a=n("7a23"),l=Object(a["Y"])("data-v-74dafa85");Object(a["F"])("data-v-74dafa85");var o={class:"content-section introduction"},s=Object(a["m"])("div",{class:"feature-intro"},[Object(a["m"])("h1",null,"Steps"),Object(a["m"])("p",null,"Steps components is an indicator for the steps in a wizard workflow. Example below uses nested routes with Steps.")],-1),r={class:"content-section implementation"},i={class:"card"};Object(a["D"])();var m=l((function(e,t,n,m,c,d){var p=Object(a["K"])("AppDemoActions"),b=Object(a["K"])("Steps"),u=Object(a["K"])("router-view"),v=Object(a["K"])("StepsDoc");return Object(a["C"])(),Object(a["h"])("div",null,[Object(a["m"])("div",o,[s,Object(a["m"])(p)]),Object(a["m"])("div",r,[Object(a["m"])("div",i,[Object(a["m"])(b,{model:c.items,readonly:!0},null,8,["model"])]),Object(a["m"])(u,{formData:c.formObject,onPrevPage:t[1]||(t[1]=function(e){return d.prevPage(e)}),onNextPage:t[2]||(t[2]=function(e){return d.nextPage(e)}),onComplete:d.complete},{default:l((function(e){var t=e.Component;return[(Object(a["C"])(),Object(a["h"])(a["b"],null,[(Object(a["C"])(),Object(a["h"])(Object(a["M"])(t)))],1024))]})),_:1},8,["formData","onComplete"])]),Object(a["m"])(v)])})),c=Object(a["m"])("h5",null,"Import",-1),d=Object(a["m"])("code",null,"\nimport Steps from 'primevue/steps';\n\n",-1),p=Object(a["m"])("h5",null,"MenuModel",-1),b=Object(a["l"])("Steps uses the common MenuModel API to define the items, visit "),u=Object(a["l"])("MenuModel API"),v=Object(a["l"])(" for details."),f=Object(a["m"])("h5",null,"Getting Started",-1),j=Object(a["m"])("p",null,"Steps is integrated with Vue Router and requires a collection of menuitems as its model.",-1),O=Object(a["m"])("code",null,'\n<Steps :model="items" />\n<router-view />\n\n',-1),h=Object(a["m"])("code",null,"\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\titems: [{\n                label: 'Personal',\n                to: '/steps'\n            },\n            {\n                label: 'Seat',\n                to: '/steps/seat'\n            },\n            {\n                label: 'Payment',\n                to: '/steps/payment'\n            },\n            {\n                label: 'Confirmation',\n                to: '/steps/confirmation'\n            }]\n\t\t}\n\t}\n}\n\n",-1),g=Object(a["m"])("h5",null,"Interactive",-1),y=Object(a["m"])("p",null,[Object(a["l"])("Items are readonly by default, if you'd like to make them interactive then disable "),Object(a["m"])("i",null,"readonly"),Object(a["l"])(" property.")],-1),D=Object(a["m"])("code",null,'\n<Steps :model="items" :readonly="false" />\n<router-view />\n\n',-1),P=Object(a["m"])("h5",null,"Templating",-1),x=Object(a["m"])("p",null,[Object(a["l"])("Steps offers content customization with the "),Object(a["m"])("i",null,"item"),Object(a["l"])(" template that receives the menuitem instance from the model as a parameter.")],-1),C=Object(a["m"])("code",null,[Object(a["m"])("template",null,'\n<Steps :model="items">\n    <template #item="{item}">\n        <a :href="item.url">{{item.label}}</a>\n    </template>\n</Steps>\n'),Object(a["l"])("\n")],-1),S=Object(a["m"])("h5",null,"Properties",-1),k=Object(a["m"])("p",null,"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.",-1),w=Object(a["m"])("div",{class:"doc-tablewrapper"},[Object(a["m"])("table",{class:"doc-table"},[Object(a["m"])("thead",null,[Object(a["m"])("tr",null,[Object(a["m"])("th",null,"Name"),Object(a["m"])("th",null,"Type"),Object(a["m"])("th",null,"Default"),Object(a["m"])("th",null,"Description")])]),Object(a["m"])("tbody",null,[Object(a["m"])("tr",null,[Object(a["m"])("td",null,"id"),Object(a["m"])("td",null,"string"),Object(a["m"])("td",null,"null"),Object(a["m"])("td",null,"Unique identifier of the element.")]),Object(a["m"])("tr",null,[Object(a["m"])("td",null,"model"),Object(a["m"])("td",null,"array"),Object(a["m"])("td",null,"null"),Object(a["m"])("td",null,"An array of menuitems.")]),Object(a["m"])("tr",null,[Object(a["m"])("td",null,"readonly"),Object(a["m"])("td",null,"boolean"),Object(a["m"])("td",null,"true"),Object(a["m"])("td",null,"Whether the items are clickable or not.")])])])],-1),N=Object(a["m"])("h5",null,"Slots",-1),I=Object(a["m"])("div",{class:"doc-tablewrapper"},[Object(a["m"])("table",{class:"doc-table"},[Object(a["m"])("thead",null,[Object(a["m"])("tr",null,[Object(a["m"])("th",null,"Name"),Object(a["m"])("th",null,"Parameters")])]),Object(a["m"])("tbody",null,[Object(a["m"])("tr",null,[Object(a["m"])("td",null,"item"),Object(a["m"])("td",null,"item: Menuitem instance")])])])],-1),A=Object(a["m"])("h5",null,"Styling",-1),$=Object(a["l"])("Following is the list of structural style classes, for theming classes visit "),V=Object(a["l"])("theming"),M=Object(a["l"])(" page."),E=Object(a["m"])("div",{class:"doc-tablewrapper"},[Object(a["m"])("table",{class:"doc-table"},[Object(a["m"])("thead",null,[Object(a["m"])("tr",null,[Object(a["m"])("th",null,"Name"),Object(a["m"])("th",null,"Element")])]),Object(a["m"])("tbody",null,[Object(a["m"])("tr",null,[Object(a["m"])("td",null,"p-steps"),Object(a["m"])("td",null,"Container element.")]),Object(a["m"])("tr",null,[Object(a["m"])("td",null,"p-steps-item"),Object(a["m"])("td",null,"Menuitem element.")]),Object(a["m"])("tr",null,[Object(a["m"])("td",null,"p-steps-number"),Object(a["m"])("td",null,"Number of menuitem.")]),Object(a["m"])("tr",null,[Object(a["m"])("td",null,"p-steps-title"),Object(a["m"])("td",null,"Label of menuitem.")])])])],-1),B=Object(a["m"])("h5",null,"Dependencies",-1),T=Object(a["m"])("p",null,"None.",-1);function F(e,t,n,l,o,s){var r=Object(a["K"])("router-link"),i=Object(a["K"])("AppDoc"),m=Object(a["L"])("code");return Object(a["C"])(),Object(a["h"])(i,{name:"StepsDemo",sources:o.sources,extPages:o.pages,github:"steps/StepsDemo.vue"},{default:Object(a["U"])((function(){return[c,Object(a["V"])(Object(a["m"])("pre",null,[d],512),[[m,void 0,void 0,{script:!0}]]),p,Object(a["m"])("p",null,[b,Object(a["m"])(r,{to:"/menumodel"},{default:Object(a["U"])((function(){return[u]})),_:1}),v]),f,j,Object(a["V"])(Object(a["m"])("pre",null,[O],512),[[m]]),Object(a["V"])(Object(a["m"])("pre",null,[h],512),[[m,void 0,void 0,{script:!0}]]),g,y,Object(a["V"])(Object(a["m"])("pre",null,[D],512),[[m]]),P,x,Object(a["V"])(Object(a["m"])("pre",null,[C],512),[[m]]),S,k,w,N,I,A,Object(a["m"])("p",null,[$,Object(a["m"])(r,{to:"/theming"},{default:Object(a["U"])((function(){return[V]})),_:1}),M]),E,B,T]})),_:1},8,["sources","extPages"])}var _={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:"\n<template>\n    <div>\n        <Toast />\n        \n        <div class=\"card\">\n            <Steps :model=\"items\" :readonly=\"true\" />\n        </div>\n\n        <router-view v-slot=\"{Component}\" :formData=\"formObject\" @prevPage=\"prevPage($event)\" @nextPage=\"nextPage($event)\" @complete=\"complete\">\n            <keep-alive>\n                <component :is=\"Component\" />\n            </keep-alive>\n        </router-view>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            items: [{\n                label: 'Personal',\n                to: '/'\n            },\n            {\n                label: 'Seat',\n                to: '/seat'\n            },\n            {\n                label: 'Payment',\n                to: '/payment'\n            },\n            {\n                label: 'Confirmation',\n                to: '/confirmation'\n            }],\n            formObject: {}\n        }\n    },\n    methods: {\n        nextPage(event) {\n            for (let field in event.formData) {\n                this.formObject[field] = event.formData[field];\n            }\n\n            this.$router.push(this.items[event.pageIndex + 1].to);\n        },\n        prevPage(event) {\n            this.$router.push(this.items[event.pageIndex - 1].to);\n        },\n        complete() {\n            this.$toast.add({severity:'success', summary:'Order submitted', detail: 'Dear, ' + this.formObject.firstname + ' ' + this.formObject.lastname + ' your order completed.'});\n        }\n    }\n}\n<\\/script>\n\n<style scoped lang=\"scss\">\n::v-deep(b) {\n    display: block;\n}\n\n::v-deep(.p-card-body) {\n    padding: 2rem;\n}\n</style>\n                    "},"composition-api":{tabName:"Composition API Source",content:'<template>\n    <div>\n        <Toast />\n\n        <div class="card">\n            <Steps :model="items" :readonly="true" />\n        </div>\n\n        <router-view v-slot="{Component}" :formData="formObject" @prevPage="prevPage($event)" @nextPage="nextPage($event)" @complete="complete">\n            <keep-alive>\n                <component :is="Component" />\n            </keep-alive>\n        </router-view>\n    </div>\n</template>\n\n<script>\nimport { ref } from \'vue\';\nimport { useRouter } from \'vue-router\';\nimport { useToast } from \'primevue/usetoast\';\n\nexport default {\n    setup() {\n        const router = useRouter();\n        const toast = useToast();\n        const items = ref([\n            {\n                label: \'Personal\',\n                to: "/"\n            },\n            {\n                label: \'Seat\',\n                to: "/seat",\n            },\n            {\n                label: \'Payment\',\n                to: "/payment",\n            },\n            {\n                label: \'Confirmation\',\n                to: "/confirmation",\n            }\n        ]);\n        const formObject = ref({});\n\n        const nextPage = (event) => {\n            for (let field in event.formData) {\n                formObject.value[field] = event.formData[field];\n            }\n\n            router.push(items.value[event.pageIndex + 1].to);\n        };\n        const prevPage = (event) => {\n            router.push(items.value[event.pageIndex - 1].to);\n        };\n        const complete = () => {\n            toast.add({severity:\'success\', summary:\'Order submitted\', detail: \'Dear, \' + formObject.value.firstname + \' \' + formObject.value.lastname + \' your order completed.\'});\n        };\n\n        return { items, formObject, nextPage, prevPage, complete }\n    }\n}\n<\\/script>\n\n<style scoped lang="scss">\n::v-deep(b) {\n    display: block;\n}\n\n::v-deep(.p-card-body) {\n    padding: 2rem;\n}\n</style>\n'}},pages:[{tabName:"PersonalDemo",content:'\n<template>\n    <div class="stepsdemo-content">\n        <Card>\n            <template v-slot:title>\n                Personal Information\n            </template>\n            <template v-slot:subtitle>\n                Enter your personal information\n            </template>\n            <template v-slot:content>\n                <div class="p-fluid">\n                    <div class="p-field">\n                        <label for="firstname">Firstname</label>\n                        <InputText id="firstname" v-model="firstname" :class="{\'p-invalid\': validationErrors.firstname && submitted}" />\n                        <small v-show="validationErrors.firstname && submitted" class="p-error">Firstname is required.</small>\n                    </div>\n                    <div class="p-field">\n                        <label for="lastname">Lastname</label>\n                        <InputText id="lastname" v-model="lastname" :class="{\'p-invalid\': validationErrors.lastname && submitted}" />\n                        <small v-show="validationErrors.lastname && submitted" class="p-error">Lastname is required.</small>\n                    </div>\n                    <div class="p-field">\n                        <label for="age">Age</label>\n                        <InputNumber id="age" v-model="age" />\n                    </div>\n                </div>\n            </template>\n            <template v-slot:footer>\n                <div class="p-grid p-nogutter p-justify-between">\n                    <i></i>\n                    <Button label="Next" @click="nextPage()" icon="pi pi-angle-right" iconPos="right" />\n                </div>\n            </template>\n        </Card>\n    </div>\n</template>\n\n<script>\nexport default {\n    data () {\n        return {\n            firstname: \'\',\n            lastname: \'\',\n            age: null,\n            submitted: false,\n            validationErrors: {}\n        }\n    },\n    methods: {\n        nextPage() {\n            this.submitted = true;\n            if (this.validateForm() ) {\n                this.$emit(\'next-page\', {formData: {firstname: this.firstname, lastname: this.lastname, age: this.age}, pageIndex: 0});\n            }\n        },\n        validateForm() {\n            if (!this.firstname.trim())\n                this.validationErrors[\'firstname\'] = true;\n            else\n                delete this.validationErrors[\'firstname\'];\n\n            if (!this.lastname.trim())\n                this.validationErrors[\'lastname\'] = true;\n            else\n                delete this.validationErrors[\'lastname\'];\n\n            return !Object.keys(this.validationErrors).length;\n        }\n    }\n}\n<\\/script>\n'},{tabName:"SeatDemo",content:'\n<template>\n    <div class="stepsdemo-content">\n        <Card>\n           <template v-slot:title>\n                Seat Information\n            </template>\n            <template v-slot:subtitle>\n                Choose your seat\n            </template>\n            <template v-slot:content>\n                <div class="p-fluid p-formgrid p-grid">\n                    <div class="p-field p-col-12 p-md-6">\n                        <label for="class">Class</label>\n                        <Dropdown inputId="class" v-model="selectedClass" :options="classes" @change="setVagons($event)" optionLabel="name" placeholder="Select a Class" />\n                    </div>\n                    <div class="p-field p-col-12 p-md-6">\n                        <label for="lastname">Wagon</label>\n                        <Dropdown inputId="wagon" v-model="selectedVagon" :options="vagons" @change="setSeats($event)" optionLabel="vagon" placeholder="Select a Vagon" />\n                    </div>\n                    <div class="p-field p-col-12">\n                        <label for="seat">Seat</label>\n                        <Dropdown inputId="seat" v-model="selectedSeat" :options="seats" optionLabel="seat" placeholder="Select a Seat" />\n                    </div>\n                </div>\n            </template>\n            <template v-slot:footer>\n                <div class="p-grid p-nogutter p-justify-between">\n                    <Button label="Back" @click="prevPage()" icon="pi pi-angle-left" />\n                    <Button label="Next" @click="nextPage()" icon="pi pi-angle-right" iconPos="right" />\n                </div>\n            </template>\n        </Card>\n    </div>\n</template>\n\n<script>\nexport default {\n    data () {\n        return {\n            selectedClass: \'\',\n            classes: [\n                {name: \'First Class\', code: \'A\', factor: 1},\n                {name: \'Second Class\', code: \'B\', factor: 2},\n                {name: \'Third Class\', code: \'C\', factor: 3}\n            ],\n            vagons: [],\n            selectedVagon: \'\',\n            seats: [],\n            selectedSeat: \'\'\n        }\n    },\n    methods: {\n        setVagons(event) {\n            if (this.selectedClass && event.value) {\n                this.vagons = [];\n                this.seats = [];\n                for (let i = 1; i < 3 * event.value.factor; i++) {\n                    this.vagons.push({vagon: i + event.value.code, type: event.value.name, factor: event.value.factor});\n                }\n            }\n        },\n        setSeats(event) {\n            if (this.selectedVagon && event.value) {\n                this.seats = [];\n                for (let i = 1; i < 10 * event.value.factor; i++) {\n                    this.seats.push({seat: i, type: event.value.type});\n                }\n            }\n        },\n        nextPage() {\n            this.$emit(\'next-page\', {formData: {class: this.selectedClass.name, vagon: this.selectedVagon.vagon, seat: this.selectedSeat.seat}, pageIndex: 1});\n        },\n        prevPage() {\n            this.$emit(\'prev-page\', {pageIndex: 1});\n        }\n    }\n}\n<\\/script>\n'},{tabName:"PaymentDemo",content:'\n<template>\n    <div class="stepsdemo-content">\n        <Card>\n            <template v-slot:title>\n                Payment Information\n            </template>\n            <template v-slot:subtitle>\n                Enter your card details\n            </template>\n            <template v-slot:content>\n                <div class="p-fluid p-formgrid p-grid">\n                    <div class="p-field p-col-12">\n                        <label for="class">Card Holder Name</label>\n                        <InputText type="text" v-model="cardholderName" />\n                    </div>\n                    <div class="p-field p-col-8">\n                        <label id="number" for="lastname">Number</label>\n                        <InputMask id="number" mask="9999-9999-9999-9999" v-model="cardholderNumber" />\n                    </div>\n                    <div class="p-field p-col-2">\n                        <label id="date" for="date">Date</label>\n                        <InputMask id="date" mask="99/99" v-model="date" />\n                    </div>\n                    <div class="p-field p-col-2">\n                        <label for="cvv">CVV</label>\n                        <InputMask id="cvv" mask="999" v-model="cvv" />\n                    </div>\n                    <div class="p-field-checkbox p-col-12">\n                        <Checkbox id="remember" v-model="remember" :binary="true" />\n                        <label for="remember" class="p-checkbox-label">Save credit card information for future</label>\n                    </div>\n                </div>\n            </template>\n            <template v-slot:footer>\n                <div class="p-grid p-nogutter p-justify-between">\n                    <Button label="Back" @click="prevPage()" icon="pi pi-angle-left" />\n                    <Button label="Next" @click="nextPage()" icon="pi pi-angle-right" iconPos="right" />\n                </div>\n            </template>\n        </Card>\n    </div>\n</template>\n\n<script>\nexport default {\n    data () {\n        return {\n            cardholderName:\'\',\n            cardholderNumber:\'\',\n            date:\'\',\n            cvv:\'\',\n            remember:false\n        }\n    },\n    methods: {\n        nextPage() {\n            this.$emit(\'next-page\', {formData: {cardholderName: this.cardholderName, cardholderNumber: this.cardholderNumber, date: this.date, cvv: this.cvv}, pageIndex: 2});\n        },\n        prevPage() {\n            this.$emit(\'prev-page\', {pageIndex: 2});\n        }\n    }\n}\n<\\/script>\n'},{tabName:"ConfirmationDemo",content:'\n<template>\n    <div class="stepsdemo-content">\n        <Card>\n            <template v-slot:title>\n                Confirmation\n            </template>\n            <template v-slot:content>\n                <div class="p-field p-col-12">\n                    <label for="class">Name</label>\n                    <b>{{formData.firstname ? formData.firstname : \'-\'}} {{formData.lastname ? formData.lastname : \'-\'}}</b>\n                </div>\n                <div class="p-field p-col-12">\n                    <label for="Age">Age</label>\n                    <b>{{formData.age ? formData.age : \'-\'}}</b>\n                </div>\n                <div class="p-field p-col-12">\n                    <label for="Age">Seat Class</label>\n                    <b>{{formData.class ? formData.class : \'-\'}}</b>\n                </div>\n                <div class="p-field p-col-12">\n                    <label for="Age">Wagon Number</label>\n                    <b>{{formData.vagon ? formData.vagon : \'-\'}}</b>\n                </div>\n                <div class="p-field p-col-12">\n                    <label for="Age">Seat</label>\n                    <b>{{formData.seat ? formData.seat : \'-\'}}</b>\n                </div>\n                <div class="p-field p-col-12">\n                    <label for="Age">Cardholder Name</label>\n                    <b>{{formData.cardholderName ? formData.cardholderName : \'-\'}}</b>\n                </div>\n                <div class="p-field p-col-12">\n                    <label for="Age">Card Number</label>\n                    <b>{{formData.cardholderNumber ? formData.cardholderNumber : \'-\'}}</b>\n                </div>\n                <div class="p-field p-col-12">\n                    <label for="Age">Date</label>\n                    <b>{{formData.date ? formData.date : \'-\'}}</b>\n                </div>\n                <div class="p-field p-col-12">\n                    <label for="Age">CVV</label>\n                    <b>{{formData.cvv && formData.cvv.length === 3  ? \'**\' + formData.cvv[2] : \'-\'}}</b>\n                </div>\n            </template>\n            <template v-slot:footer>\n                <div class="p-grid p-nogutter p-justify-between">\n                    <Button label="Back" @click="prevPage()" icon="pi pi-angle-left" />\n                    <Button label="Complete" @click="complete()" icon="pi pi-check" iconPos="right" class="p-button-success"/>\n                </div>\n            </template>\n        </Card>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        formData: Object\n    },\n    methods: {\n        prevPage() {\n            this.$emit(\'prev-page\', {pageIndex: 3});\n        },\n        complete() {\n            this.$emit(\'complete\');\n        }\n    }\n}\n<\\/script>\n'}]}}};_.render=F;var L=_,K={data:function(){return{items:[{label:"Personal",to:"/steps"},{label:"Seat",to:"/steps/seat"},{label:"Payment",to:"/steps/payment"},{label:"Confirmation",to:"/steps/confirmation"}],formObject:{}}},components:{StepsDoc:L},methods:{nextPage:function(e){for(var t in e.formData)this.formObject[t]=e.formData[t];this.$router.push(this.items[e.pageIndex+1].to)},prevPage:function(e){this.$router.push(this.items[e.pageIndex-1].to)},complete:function(){this.$toast.add({severity:"success",summary:"Order submitted",detail:"Dear, "+this.formObject.firstname+" "+this.formObject.lastname+" your order completed."})}}};n("564b");K.render=m,K.__scopeId="data-v-74dafa85";t["default"]=K},9956:function(e,t,n){var a=n("24fb");t=a(!1),t.push([e.i,"[data-v-74dafa85] b{display:block}[data-v-74dafa85] .p-card-body{padding:2rem}",""]),e.exports=t},d87c:function(e,t,n){var a=n("9956");a.__esModule&&(a=a.default),"string"===typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);var l=n("499e").default;l("d71621de",a,!0,{sourceMap:!1,shadowMode:!1})}}]);