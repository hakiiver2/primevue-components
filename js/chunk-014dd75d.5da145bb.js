(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-014dd75d"],{"82f4":function(e,n,s){"use strict";s.d(n,"a",(function(){return o}));var t=s("d4ec"),i=s("bee2"),a=s("bc3a"),l=s.n(a),o=function(){function e(){Object(t["a"])(this,e)}return Object(i["a"])(e,[{key:"getTreeTableNodes",value:function(){return l.a.get("demo/data/treetablenodes.json").then((function(e){return e.data.root}))}},{key:"getTreeNodes",value:function(){return l.a.get("demo/data/treenodes.json").then((function(e){return e.data.root}))}}]),e}()},"8a08":function(e,n,s){"use strict";s.r(n);s("b0c0");var t=s("7a23"),i=Object(t["Y"])("data-v-88e8dbee");Object(t["F"])("data-v-88e8dbee");var a={class:"content-section introduction"},l=Object(t["m"])("div",{class:"feature-intro"},[Object(t["m"])("h1",null,"TreeTable - Responsive"),Object(t["m"])("p",null,"TreeTable display can be optimized according for different screen sizes.")],-1),o={class:"content-section implementation"},d={class:"card"},r=Object(t["m"])("h5",null,"Scroll",-1),m=Object(t["m"])("p",null,[Object(t["l"])("Built-in responsiveness using the "),Object(t["m"])("b",null,"responsiveLayout"),Object(t["l"])(" property set to scroll.")],-1),c={class:"card"},u=Object(t["m"])("h5",null,"Custom",-1),p=Object(t["m"])("p",null,"Custom implementation using media queries.",-1),b={class:"sm-visible"},v={class:"sm-visible"};Object(t["D"])();var h=i((function(e,n,s,h,f,y){var C=Object(t["K"])("AppDemoActions"),O=Object(t["K"])("Column"),j=Object(t["K"])("TreeTable"),T=Object(t["K"])("AppDoc");return Object(t["C"])(),Object(t["h"])("div",null,[Object(t["m"])("div",a,[l,Object(t["m"])(C)]),Object(t["m"])("div",o,[Object(t["m"])("div",d,[r,m,Object(t["m"])(j,{value:f.nodes,responsiveLayout:"scroll"},{default:i((function(){return[Object(t["m"])(O,{field:"name",header:"Name",expander:!0,style:{"min-width":"200px"}}),Object(t["m"])(O,{field:"size",header:"Size",style:{"min-width":"200px"}}),Object(t["m"])(O,{field:"type",header:"Type",style:{"min-width":"200px"}})]})),_:1},8,["value"])]),Object(t["m"])("div",c,[u,p,Object(t["m"])(j,{value:f.nodes},{default:i((function(){return[Object(t["m"])(O,{field:"name",header:"Name",expander:!0},{body:i((function(e){return[Object(t["l"])(Object(t["O"])(e.node.data.name)+" ",1),Object(t["m"])("span",b,Object(t["O"])(e.node.data.size),1),Object(t["m"])("span",v,Object(t["O"])(e.node.data.type),1)]})),_:1}),Object(t["m"])(O,{field:"size",header:"Size",headerClass:"sm-invisible",bodyClass:"sm-invisible"}),Object(t["m"])(O,{field:"type",header:"Type",headerClass:"sm-invisible",bodyClass:"sm-invisible"})]})),_:1},8,["value"])])]),Object(t["m"])(T,{name:"TreeTableResponsiveDemo",sources:f.sources,service:["NodeService"],data:["treetablenodes"],github:"treetable/TreeTableResponsiveDemo.vue"},null,8,["sources"])])})),f=s("82f4"),y={data:function(){return{nodes:null,sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <div class="card">\n            <h5>Scroll</h5>\n            <p>Built-in responsiveness using the <b>responsiveLayout</b> property set to scroll.</p>\n            <TreeTable :value="nodes" responsiveLayout="scroll">\n                <Column field="name" header="Name" :expander="true" style="min-width:200px"></Column>\n                <Column field="size" header="Size" style="min-width:200px"></Column>\n                <Column field="type" header="Type" style="min-width:200px"></Column>\n            </TreeTable>\n        </div>\n\n        <div class="card">\n            <h5>Custom</h5>\n            <p>Custom implementation using media queries.</p>\n            <TreeTable :value="nodes">\n                <Column field="name" header="Name" :expander="true">\n                    <template #body="slotProps">\n                        {{slotProps.node.data.name}}\n                        <span class="sm-visible">{{slotProps.node.data.size}}</span>\n                        <span class="sm-visible">{{slotProps.node.data.type}}</span>\n                    </template>\n                </Column>\n                <Column field="size" header="Size" headerClass="sm-invisible" bodyClass="sm-invisible"></Column>\n                <Column field="type" header="Type" headerClass="sm-invisible" bodyClass="sm-invisible"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport NodeService from \'./service/NodeService\';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n<\\/script>\n\n<style scoped lang="scss">\n.sm-visible {\n    display: none;\n}\n\n@media screen and (max-width: 40em) {\n    ::v-deep(.sm-invisible) {\n        display: none;\n    }\n\n    ::v-deep(.sm-visible) {\n        display: inline;\n        margin-right: .5rem;\n    }\n}\n</style>'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <div class="card">\n            <h5>Scroll</h5>\n            <p>Built-in responsiveness using the <b>responsiveLayout</b> property set to scroll.</p>\n            <TreeTable :value="nodes" responsiveLayout="scroll">\n                <Column field="name" header="Name" :expander="true" style="min-width:200px"></Column>\n                <Column field="size" header="Size" style="min-width:200px"></Column>\n                <Column field="type" header="Type" style="min-width:200px"></Column>\n            </TreeTable>\n        </div>\n\n        <div class="card">\n            <h5>Custom</h5>\n            <p>Custom implementation using media queries.</p>\n            <TreeTable :value="nodes">\n                <Column field="name" header="Name" :expander="true">\n                    <template #body="slotProps">\n                        {{slotProps.node.data.name}}\n                        <span class="sm-visible">{{slotProps.node.data.size}}</span>\n                        <span class="sm-visible">{{slotProps.node.data.type}}</span>\n                    </template>\n                </Column>\n                <Column field="size" header="Size" headerClass="sm-invisible" bodyClass="sm-invisible"></Column>\n                <Column field="type" header="Type" headerClass="sm-invisible" bodyClass="sm-invisible"></Column>\n            </TreeTable>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\nimport NodeService from \'./service/NodeService\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n        })\n\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n\n        return { nodes, nodeService }\n    }\n}\n<\\/script>\n\n<style scoped lang="scss">\n.sm-visible {\n    display: none;\n}\n\n@media screen and (max-width: 40em) {\n    ::v-deep(.sm-invisible) {\n        display: none;\n    }\n\n    ::v-deep(.sm-visible) {\n        display: inline;\n        margin-right: .5rem;\n    }\n}\n</style>'}}}},nodeService:null,created:function(){this.nodeService=new f["a"]},mounted:function(){var e=this;this.nodeService.getTreeTableNodes().then((function(n){return e.nodes=n}))}};s("94e3");y.render=h,y.__scopeId="data-v-88e8dbee";n["default"]=y},"94e3":function(e,n,s){"use strict";s("f867")},a313:function(e,n,s){var t=s("24fb");n=t(!1),n.push([e.i,".sm-visible[data-v-88e8dbee]{display:none}@media screen and (max-width:40em){[data-v-88e8dbee] .sm-invisible{display:none}[data-v-88e8dbee] .sm-visible{display:inline;margin-right:.5rem}}",""]),e.exports=n},f867:function(e,n,s){var t=s("a313");t.__esModule&&(t=t.default),"string"===typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var i=s("499e").default;i("8ff3d28e",t,!0,{sourceMap:!1,shadowMode:!1})}}]);