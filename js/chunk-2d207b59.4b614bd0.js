(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d207b59"],{a24f:function(e,c,t){"use strict";t.r(c);t("b0c0");var l=t("7a23"),n={class:"content-section introduction"},i=Object(l["m"])("div",{class:"feature-intro"},[Object(l["m"])("h1",null,"Checkbox"),Object(l["m"])("p",null,"Checkbox is an extension to standard checkbox element with theming.")],-1),a={class:"content-section implementation"},o={class:"card"},b=Object(l["m"])("h5",null,"Basic",-1),d={class:"p-field-checkbox"},s={for:"binary"},r=Object(l["m"])("h5",null,"Multiple",-1),u={class:"p-field-checkbox"},m=Object(l["m"])("label",{for:"city1"},"Chicago",-1),h={class:"p-field-checkbox"},O=Object(l["m"])("label",{for:"city2"},"Los Angeles",-1),j={class:"p-field-checkbox"},y=Object(l["m"])("label",{for:"city3"},"New York",-1),k={class:"p-field-checkbox"},p=Object(l["m"])("label",{for:"city4"},"San Francisco",-1),v=Object(l["m"])("h5",null,"Dynamic Values, Preselection, Value Binding and Disabled Option",-1);function f(e,c,t,f,g,x){var C=Object(l["K"])("AppDemoActions"),V=Object(l["K"])("Checkbox"),w=Object(l["K"])("CheckboxDoc");return Object(l["C"])(),Object(l["h"])("div",null,[Object(l["m"])("div",n,[i,Object(l["m"])(C)]),Object(l["m"])("div",a,[Object(l["m"])("div",o,[b,Object(l["m"])("div",d,[Object(l["m"])(V,{id:"binary",modelValue:g.checked,"onUpdate:modelValue":c[1]||(c[1]=function(e){return g.checked=e}),binary:!0},null,8,["modelValue"]),Object(l["m"])("label",s,Object(l["O"])(g.checked),1)]),r,Object(l["m"])("div",u,[Object(l["m"])(V,{id:"city1",name:"city",value:"Chicago",modelValue:g.cities,"onUpdate:modelValue":c[2]||(c[2]=function(e){return g.cities=e})},null,8,["modelValue"]),m]),Object(l["m"])("div",h,[Object(l["m"])(V,{id:"city2",name:"city",value:"Los Angeles",modelValue:g.cities,"onUpdate:modelValue":c[3]||(c[3]=function(e){return g.cities=e})},null,8,["modelValue"]),O]),Object(l["m"])("div",j,[Object(l["m"])(V,{id:"city3",name:"city",value:"New York",modelValue:g.cities,"onUpdate:modelValue":c[4]||(c[4]=function(e){return g.cities=e})},null,8,["modelValue"]),y]),Object(l["m"])("div",k,[Object(l["m"])(V,{id:"city4",name:"city",value:"San Francisco",modelValue:g.cities,"onUpdate:modelValue":c[5]||(c[5]=function(e){return g.cities=e})},null,8,["modelValue"]),p]),v,(Object(l["C"])(!0),Object(l["h"])(l["a"],null,Object(l["I"])(g.categories,(function(e){return Object(l["C"])(),Object(l["h"])("div",{key:e.key,class:"p-field-checkbox"},[Object(l["m"])(V,{id:e.key,name:"category",value:e,modelValue:g.selectedCategories,"onUpdate:modelValue":c[6]||(c[6]=function(e){return g.selectedCategories=e}),disabled:"R"===e.key},null,8,["id","value","modelValue","disabled"]),Object(l["m"])("label",{for:e.key},Object(l["O"])(e.name),9,["for"])])})),128))])]),Object(l["m"])(w)])}t("fb6a");var g=Object(l["m"])("h5",null,"Import",-1),x=Object(l["m"])("code",null,"\nimport Checkbox from 'primevue/checkbox';\n\n",-1),C=Object(l["m"])("h5",null,"Getting Started",-1),V=Object(l["m"])("p",null,"Checkbox can either be used in multiple selection with other checkboxes or as a single checkbox to provide a boolean value.",-1),w=Object(l["m"])("code",null,'\n<Checkbox v-model="checked" :binary="true" />\n\n',-1),A=Object(l["m"])("h5",null,"Multiple Values",-1),D=Object(l["m"])("p",null,"Multiple mode is enabled by default, v-model property refers to an array to bind the selected values.",-1),N=Object(l["m"])("code",null,'\n<Checkbox name="city" value="Chicago" v-model="cities" />\n<Checkbox name="city" value="Los Angeles" v-model="cities" />\n<Checkbox name="city" value="New York" v-model="cities" />\n<Checkbox name="city" value="San Francisco" v-model="cities" />\n\n',-1),P=Object(l["m"])("code",null,"\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tcities: []\n\t\t}\n\t}\n}\n\n",-1),M=Object(l["m"])("p",null,"As v-model is two-way binding enabled, prepopulating the model array with values is enough to display the related checkboxes as checked by default.",-1),S=Object(l["m"])("h5",null,"Properties",-1),F=Object(l["m"])("p",null,"Any property such as name and autofocus are passed to the underlying input element. Following are the additional properties to configure the component.",-1),R=Object(l["m"])("div",{class:"doc-tablewrapper"},[Object(l["m"])("table",{class:"doc-table"},[Object(l["m"])("thead",null,[Object(l["m"])("tr",null,[Object(l["m"])("th",null,"Name"),Object(l["m"])("th",null,"Type"),Object(l["m"])("th",null,"Default"),Object(l["m"])("th",null,"Description")])]),Object(l["m"])("tbody",null,[Object(l["m"])("tr",null,[Object(l["m"])("td",null,"value"),Object(l["m"])("td",null,"any"),Object(l["m"])("td",null,"null"),Object(l["m"])("td",null,"Value of the checkbox.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"modelValue"),Object(l["m"])("td",null,"any"),Object(l["m"])("td",null,"null"),Object(l["m"])("td",null,"Value binding of the checkbox.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"binary"),Object(l["m"])("td",null,"boolean"),Object(l["m"])("td",null,"false"),Object(l["m"])("td",null,"Allows to select a boolean value instead of multiple values.")])])])],-1),L=Object(l["m"])("h5",null,"Events",-1),U=Object(l["m"])("p",null,"Any valid event such as focus and blur.",-1),Y=Object(l["m"])("h5",null,"Styling",-1),B=Object(l["l"])("Following is the list of structural style classes, for theming classes visit "),I=Object(l["l"])("theming"),K=Object(l["l"])(" page."),E=Object(l["m"])("div",{class:"doc-tablewrapper"},[Object(l["m"])("table",{class:"doc-table"},[Object(l["m"])("thead",null,[Object(l["m"])("tr",null,[Object(l["m"])("th",null,"Name"),Object(l["m"])("th",null,"Element")])]),Object(l["m"])("tbody",null,[Object(l["m"])("tr",null,[Object(l["m"])("td",null,"p-checkbox"),Object(l["m"])("td",null,"Container element")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"p-checkbox-box"),Object(l["m"])("td",null,"Container of icon.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"p-checkbox-icon"),Object(l["m"])("td",null,"Icon element.")])])])],-1),J=Object(l["m"])("h5",null,"Dependencies",-1),_=Object(l["m"])("p",null,"None.",-1);function G(e,c,t,n,i,a){var o=Object(l["K"])("router-link"),b=Object(l["K"])("AppDoc"),d=Object(l["L"])("code");return Object(l["C"])(),Object(l["h"])(b,{name:"CheckboxDemo",sources:i.sources,github:"checkbox/CheckboxDemo.vue"},{default:Object(l["U"])((function(){return[g,Object(l["V"])(Object(l["m"])("pre",null,[x],512),[[d,void 0,void 0,{script:!0}]]),C,V,Object(l["V"])(Object(l["m"])("pre",null,[w],512),[[d]]),A,D,Object(l["V"])(Object(l["m"])("pre",null,[N],512),[[d]]),Object(l["V"])(Object(l["m"])("pre",null,[P],512),[[d,void 0,void 0,{script:!0}]]),M,S,F,R,L,U,Y,Object(l["m"])("p",null,[B,Object(l["m"])(o,{to:"/theming"},{default:Object(l["U"])((function(){return[I]})),_:1}),K]),E,J,_]})),_:1},8,["sources"])}var T={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <h5>Basic</h5>\n        <div class="p-field-checkbox">\n            <Checkbox id="binary" v-model="checked" :binary="true" />\n            <label for="binary">{{checked}}</label>\n        </div>\n\n        <h5>Multiple</h5>\n        <div class="p-field-checkbox">\n            <Checkbox id="city1" name="city" value="Chicago" v-model="cities" />\n            <label for="city1">Chicago</label>\n        </div>\n        <div class="p-field-checkbox">\n            <Checkbox id="city2" name="city" value="Los Angeles" v-model="cities" />\n            <label for="city2">Los Angeles</label>\n        </div>\n        <div class="p-field-checkbox">\n            <Checkbox id="city3" name="city" value="New York" v-model="cities" />\n            <label for="city3">New York</label>\n        </div>\n        <div class="p-field-checkbox">\n            <Checkbox id="city4" name="city" value="San Francisco" v-model="cities" />\n            <label for="city4">San Francisco</label>\n        </div>\n\n        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n        <div v-for="category of categories" :key="category.key" class="p-field-checkbox">\n            <Checkbox :id="category.key" name="category" :value="category" v-model="selectedCategories" :disabled="category.key === \'R\'"/>\n            <label :for="category.key">{{category.name}}</label>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            checked: false,\n            cities: [],\n            categories: [{name: \'Accounting\', key: \'A\'}, {name: \'Marketing\', key: \'M\'}, {name: \'Production\', key: \'P\'}, {name: \'Research\', key: \'R\'}],\n            selectedCategories: []\n        }\n    },\n    created() {\n        this.selectedCategories = this.categories.slice(1,3);\n    }\n}\n<\\/script>'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <h5>Basic</h5>\n        <div class="p-field-checkbox">\n            <Checkbox id="binary" v-model="checked" :binary="true" />\n            <label for="binary">{{checked}}</label>\n        </div>\n\n        <h5>Multiple</h5>\n        <div class="p-field-checkbox">\n            <Checkbox id="city1" name="city" value="Chicago" v-model="cities" />\n            <label for="city1">Chicago</label>\n        </div>\n        <div class="p-field-checkbox">\n            <Checkbox id="city2" name="city" value="Los Angeles" v-model="cities" />\n            <label for="city2">Los Angeles</label>\n        </div>\n        <div class="p-field-checkbox">\n            <Checkbox id="city3" name="city" value="New York" v-model="cities" />\n            <label for="city3">New York</label>\n        </div>\n        <div class="p-field-checkbox">\n            <Checkbox id="city4" name="city" value="San Francisco" v-model="cities" />\n            <label for="city4">San Francisco</label>\n        </div>\n\n        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n        <div v-for="category of categories" :key="category.key" class="p-field-checkbox">\n            <Checkbox :id="category.key" name="category" :value="category" v-model="selectedCategories" :disabled="category.key === \'R\'"/>\n            <label :for="category.key">{{category.name}}</label>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \'vue\';\nexport default {\n    setup() {\n        const checked = ref(false);\n        const cities = ref([]);\n        const categories = ref([\n            {name: \'Accounting\', key: \'A\'}, \n            {name: \'Marketing\', key: \'M\'}, \n            {name: \'Production\', key: \'P\'}, \n            {name: \'Research\', key: \'R\'}\n        ]);\n        const selectedCategories = ref(categories.value.slice(1,3));\n\n        return { checked, cities, categories, selectedCategories }\n    }\n}\n<\\/script>'}}}}};T.render=G;var q=T,z={data:function(){return{checked:!1,cities:[],categories:[{name:"Accounting",key:"A"},{name:"Marketing",key:"M"},{name:"Production",key:"P"},{name:"Research",key:"R"}],selectedCategories:[]}},created:function(){this.selectedCategories=this.categories.slice(1,3)},components:{CheckboxDoc:q}};z.render=f;c["default"]=z}}]);