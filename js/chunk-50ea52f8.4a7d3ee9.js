(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-50ea52f8"],{"528a":function(e,t,n){"use strict";n.r(t);var l=n("7a23"),o={class:"content-section introduction"},c=Object(l["m"])("div",{class:"feature-intro"},[Object(l["m"])("h1",null,[Object(l["l"])("DataTable "),Object(l["m"])("span",null,"Column Toggle")]),Object(l["m"])("p",null,"MultiSelect component can be used to implement column toggle functionality.")],-1),a={class:"content-section implementation"},u={class:"card"},d={style:{"text-align":"left"}};function r(e,t,n,r,s,i){var m=Object(l["K"])("AppDemoActions"),p=Object(l["K"])("MultiSelect"),f=Object(l["K"])("Column"),h=Object(l["K"])("DataTable"),v=Object(l["K"])("AppDoc");return Object(l["C"])(),Object(l["h"])("div",null,[Object(l["m"])("div",o,[c,Object(l["m"])(m)]),Object(l["m"])("div",a,[Object(l["m"])("div",u,[Object(l["m"])(h,{value:s.products,responsiveLayout:"scroll"},{header:Object(l["U"])((function(){return[Object(l["m"])("div",d,[Object(l["m"])(p,{modelValue:s.selectedColumns,options:s.columns,optionLabel:"header","onUpdate:modelValue":i.onToggle,placeholder:"Select Columns",style:{width:"20em"}},null,8,["modelValue","options","onUpdate:modelValue"])])]})),default:Object(l["U"])((function(){return[Object(l["m"])(f,{field:"code",header:"Code"}),(Object(l["C"])(!0),Object(l["h"])(l["a"],null,Object(l["I"])(s.selectedColumns,(function(e,t){return Object(l["C"])(),Object(l["h"])(f,{field:e.field,header:e.header,key:e.field+"_"+t},null,8,["field","header"])})),128))]})),_:1},8,["value"])])]),Object(l["m"])(v,{name:"DataTableColToggleDemo",sources:s.sources,service:["ProductService"],data:["products-small"],github:"datatable/DataTableColToggleDemo.vue"},null,8,["sources"])])}n("4de4"),n("caad"),n("2532");var s=n("e9c0"),i={data:function(){return{selectedColumns:null,columns:null,products:null,sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <DataTable :value="products" responsiveLayout="scroll">\n            <template #header>\n                <div style="text-align:left">\n                    <MultiSelect :modelValue="selectedColumns" :options="columns" optionLabel="header" @update:modelValue="onToggle"\n                        placeholder="Select Columns" style="width: 20em"/>\n                </div>\n            </template>\n            <Column field="code" header="Code" />\n            <Column v-for="(col, index) of selectedColumns" :field="col.field" :header="col.header" :key="col.field + \'_\' + index"></Column>\n        </DataTable>\n    </div>\n</template>\n\n<script>\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    data() {\n        return {\n            selectedColumns: null,\n            columns: null,\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n\n        this.columns = [\n            {field: \'name\', header: \'Name\'},\n            {field: \'category\', header: \'Category\'},\n            {field: \'quantity\', header: \'Quantity\'}\n        ];\n        this.selectedColumns = this.columns;\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onToggle(value) {\n            this.selectedColumns = this.columns.filter(col => value.includes(col));\n        }\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <DataTable :value="products" responsiveLayout="scroll">\n            <template #header>\n                <div style="text-align:left">\n                    <MultiSelect :modelValue="selectedColumns" :options="columns" optionLabel="header" @update:modelValue="onToggle"\n                        placeholder="Select Columns" style="width: 20em"/>\n                </div>\n            </template>\n            <Column field="code" header="Code" />\n            <Column v-for="(col, index) of selectedColumns" :field="col.field" :header="col.header" :key="col.field + \'_\' + index"></Column>\n        </DataTable>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\nimport ProductService from \'./service/ProductService\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            productService.value.getProductsSmall().then(data => products.value = data);\n        })\n\n        const columns = ref([\n            {field: \'name\', header: \'Name\'},\n            {field: \'category\', header: \'Category\'},\n            {field: \'quantity\', header: \'Quantity\'}\n        ]);\n        const selectedColumns = ref(columns.value);\n        const products = ref();\n        const productService = ref(new ProductService());\n        const onToggle = (val) => {\n            selectedColumns.value = columns.value.filter(col => val.includes(col));\n        };\n\n        return { columns, selectedColumns, products, productService, onToggle }\n    }\n}\n<\\/script>\n'}}}},productService:null,created:function(){this.productService=new s["a"],this.columns=[{field:"name",header:"Name"},{field:"category",header:"Category"},{field:"quantity",header:"Quantity"}],this.selectedColumns=this.columns},mounted:function(){var e=this;this.productService.getProductsSmall().then((function(t){return e.products=t}))},methods:{onToggle:function(e){this.selectedColumns=this.columns.filter((function(t){return e.includes(t)}))}}};i.render=r;t["default"]=i},e9c0:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var l=n("d4ec"),o=n("bee2"),c=n("bc3a"),a=n.n(c),u=function(){function e(){Object(l["a"])(this,e)}return Object(o["a"])(e,[{key:"getProductsSmall",value:function(){return a.a.get("demo/data/products-small.json").then((function(e){return e.data.data}))}},{key:"getProducts",value:function(){return a.a.get("demo/data/products.json").then((function(e){return e.data.data}))}},{key:"getProductsWithOrdersSmall",value:function(){return a.a.get("demo/data/products-orders-small.json").then((function(e){return e.data.data}))}}]),e}()}}]);