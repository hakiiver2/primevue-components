(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0e8871"],{"8a3e":function(e,t,n){"use strict";n.r(t);var l=n("7a23"),r={class:"content-section introduction"},a=Object(l["m"])("div",{class:"feature-intro"},[Object(l["m"])("h1",null,"ProgressBar"),Object(l["m"])("p",null,"ProgressBar is a process status indicator.")],-1),s={class:"content-section implementation"},o={class:"card"},u=Object(l["m"])("h5",null,"Dynamic",-1),c=Object(l["m"])("h5",null,"Static",-1),m=Object(l["m"])("h5",null,"Indeterminate",-1);function i(e,t,n,i,b,d){var O=Object(l["K"])("AppDemoActions"),j=Object(l["K"])("ProgressBar"),v=Object(l["K"])("ProgressBarDoc");return Object(l["C"])(),Object(l["h"])("div",null,[Object(l["m"])("div",r,[a,Object(l["m"])(O)]),Object(l["m"])("div",s,[Object(l["m"])("div",o,[u,Object(l["m"])(j,{value:b.value1},null,8,["value"]),c,Object(l["m"])(j,{value:b.value2,showValue:!1},null,8,["value"]),m,Object(l["m"])(j,{mode:"indeterminate",style:{height:".5em"}})])]),Object(l["m"])(v)])}var b=Object(l["m"])("h5",null,"Import",-1),d=Object(l["m"])("code",null,"\nimport ProgressBar from 'primevue/progressbar';\n\n",-1),O=Object(l["m"])("h5",null,"Getting Started",-1),j=Object(l["m"])("p",null,'ProgressBar has two modes; "determinate" (default) and "indeterminate". In determinate mode, a value between 0 and 100 is required to display the progress.',-1),v=Object(l["m"])("code",null,'\n<ProgressBar :value="value" />\n\n',-1),p=Object(l["m"])("code",null,"\ndata() {\n\treturn {\n\t\tvalue: 0\n\t}\n}\n\n",-1),h=Object(l["m"])("p",null,[Object(l["l"])("Indeterminate is simplly enabled using "),Object(l["m"])("i",null,"mode"),Object(l["l"])(" property.")],-1),g=Object(l["m"])("code",null,'\n<ProgressBar mode="indeterminate"/>\n\n',-1),f=Object(l["m"])("h5",null,"Slot",-1),P=Object(l["m"])("p",null,"A custom label can be placed inside the progress bar via the default slot.",-1),w=Object(l["m"])("code",null,[Object(l["m"])("template",null,'\n<ProgressBar :value="value">\n    Percent Complete: {{value}}%\n</ProgressBar>\n'),Object(l["l"])("\n")],-1),B=Object(l["m"])("h5",null,"Properties",-1),y=Object(l["m"])("p",null,"Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.",-1),V=Object(l["m"])("div",{class:"doc-tablewrapper"},[Object(l["m"])("table",{class:"doc-table"},[Object(l["m"])("thead",null,[Object(l["m"])("tr",null,[Object(l["m"])("th",null,"Name"),Object(l["m"])("th",null,"Type"),Object(l["m"])("th",null,"Default"),Object(l["m"])("th",null,"Description")])]),Object(l["m"])("tbody",null,[Object(l["m"])("tr",null,[Object(l["m"])("td",null,"value"),Object(l["m"])("td",null,"number"),Object(l["m"])("td",null,"null"),Object(l["m"])("td",null,"Current value of the progress.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"mode"),Object(l["m"])("td",null,"string"),Object(l["m"])("td",null,"determinate"),Object(l["m"])("td",null,'Defines the mode of the progress, valid values are "determinate" and "indeterminate".')]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"showValue"),Object(l["m"])("td",null,"boolean"),Object(l["m"])("td",null,"true"),Object(l["m"])("td",null,"Whether to display the progress bar value.")])])])],-1),I=Object(l["m"])("h5",null,"Styling",-1),D=Object(l["l"])("Following is the list of structural style classes, for theming classes visit "),C=Object(l["l"])("theming"),M=Object(l["l"])(" page."),S=Object(l["m"])("div",{class:"doc-tablewrapper"},[Object(l["m"])("table",{class:"doc-table"},[Object(l["m"])("thead",null,[Object(l["m"])("tr",null,[Object(l["m"])("th",null,"Name"),Object(l["m"])("th",null,"Element")])]),Object(l["m"])("tbody",null,[Object(l["m"])("tr",null,[Object(l["m"])("td",null,"p-progressbar"),Object(l["m"])("td",null,"Container element.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"p-progressbar-determinate"),Object(l["m"])("td",null,"Container element of a determinate progressbar.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"p-progressbar-indeterminate"),Object(l["m"])("td",null,"Container element of an indeterminate progressbar.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"p-progressbar-value"),Object(l["m"])("td",null,"Element whose width changes according to value.")]),Object(l["m"])("tr",null,[Object(l["m"])("td",null,"p-progressbar-label"),Object(l["m"])("td",null,"Label element that displays the current value.")])])])],-1),A=Object(l["m"])("h5",null,"Dependencies",-1),U=Object(l["m"])("p",null,"None.",-1);function K(e,t,n,r,a,s){var o=Object(l["K"])("router-link"),u=Object(l["K"])("AppDoc"),c=Object(l["L"])("code");return Object(l["C"])(),Object(l["h"])(u,{name:"ProgressBarDemo",sources:a.sources,github:"progressbar/ProgressBarDemo.vue"},{default:Object(l["U"])((function(){return[b,Object(l["V"])(Object(l["m"])("pre",null,[d],512),[[c,void 0,void 0,{script:!0}]]),O,j,Object(l["V"])(Object(l["m"])("pre",null,[v],512),[[c]]),Object(l["V"])(Object(l["m"])("pre",null,[p],512),[[c,void 0,void 0,{script:!0}]]),h,Object(l["V"])(Object(l["m"])("pre",null,[g],512),[[c]]),f,P,Object(l["V"])(Object(l["m"])("pre",null,[w],512),[[c]]),B,y,V,I,Object(l["m"])("p",null,[D,Object(l["m"])(o,{to:"/theming"},{default:Object(l["U"])((function(){return[C]})),_:1}),M]),S,A,U]})),_:1},8,["sources"])}var N={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <h5>Dynamic</h5>\n        <ProgressBar :value="value1" />\n\n        <h5>Static</h5>\n        <ProgressBar :value="value2" :showValue="false" />\n\n        <h5>Indeterminate</h5>\n        <ProgressBar mode="indeterminate" style="height: .5em" />\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            value1: 0,\n            value2: 50\n        }\n    },\n    interval: null,\n    methods: {\n        startProgress() {\n            this.interval = setInterval(() => {\n                let newValue = this.value1 + Math.floor(Math.random() * 10) + 1;\n                if (newValue >= 100) {\n                    newValue = 100;\n                }\n                this.value1 = newValue;\n            }, 2000);\n        },\n        endProgress() {\n            clearInterval(this.interval);\n            this.interval = null;\n        }\n    },\n    mounted() {\n        this.startProgress();\n    },\n    beforeUnmount() {\n        this.endProgress();\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <h5>Dynamic</h5>\n        <ProgressBar :value="value1" />\n\n        <h5>Static</h5>\n        <ProgressBar :value="value2" :showValue="false" />\n\n        <h5>Indeterminate</h5>\n        <ProgressBar mode="indeterminate" style="height: .5em" />\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted, onBeforeUnmount } from \'vue\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            startProgress();\n        })\n\n        onBeforeUnmount(() => {\n            endProgress();\n        })\n        \n        const value1 = ref(0);\n        const value2 = ref(50);\n        const interval = ref(null);\n        const startProgress = () => {\n            interval.value = setInterval(() => {\n                let newValue = value1.value + Math.floor(Math.random() * 10) + 1;\n                if (newValue >= 100) {\n                    newValue = 100;\n                }\n                value1.value = newValue;\n            }, 2000);\n        };\n        const endProgress = () => {\n            clearInterval(interval.value);\n            interval.value = null;\n        };\n\n        return { value1, value2 }\n    }\n}\n<\\/script>'}}}}};N.render=K;var k=N,x={data:function(){return{value1:0,value2:50}},interval:null,methods:{startProgress:function(){var e=this;this.interval=setInterval((function(){var t=e.value1+Math.floor(10*Math.random())+1;t>=100&&(t=100),e.value1=t}),2e3)},endProgress:function(){clearInterval(this.interval),this.interval=null}},mounted:function(){this.startProgress()},beforeUnmount:function(){this.endProgress()},components:{ProgressBarDoc:k}};x.render=i;t["default"]=x}}]);