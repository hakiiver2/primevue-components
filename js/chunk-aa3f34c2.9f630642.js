(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-aa3f34c2"],{"352b":function(e,t,n){"use strict";n.r(t);var o=n("7a23"),a={class:"content-section introduction"},i=Object(o["m"])("div",{class:"feature-intro"},[Object(o["m"])("h1",null,[Object(o["l"])("TreeTable "),Object(o["m"])("span",null,"Templating")]),Object(o["m"])("p",null,"Custom content at header, body and footer sections are supported via templating.")],-1),r={class:"content-section implementation"},c={class:"card"},l=Object(o["l"])(" FileSystem "),u={style:{"text-align":"left"}};function d(e,t,n,d,s,p){var m=Object(o["K"])("AppDemoActions"),b=Object(o["K"])("Column"),f=Object(o["K"])("Button"),h=Object(o["K"])("TreeTable"),v=Object(o["K"])("AppDoc");return Object(o["C"])(),Object(o["h"])("div",null,[Object(o["m"])("div",a,[i,Object(o["m"])(m)]),Object(o["m"])("div",r,[Object(o["m"])("div",c,[Object(o["m"])(h,{value:s.nodes},{header:Object(o["U"])((function(){return[l]})),footer:Object(o["U"])((function(){return[Object(o["m"])("div",u,[Object(o["m"])(f,{icon:"pi pi-refresh"})])]})),default:Object(o["U"])((function(){return[Object(o["m"])(b,{field:"name",header:"Name",expander:!0}),Object(o["m"])(b,{field:"size",header:"Size"}),Object(o["m"])(b,{field:"type",header:"Type"}),Object(o["m"])(b,{headerStyle:"width: 8em",headerClass:"p-text-center",bodyClass:"p-text-center"},{header:Object(o["U"])((function(){return[Object(o["m"])(f,{type:"button",icon:"pi pi-cog"})]})),body:Object(o["U"])((function(){return[Object(o["m"])(f,{type:"button",icon:"pi pi-search",class:"p-button-success",style:{"margin-right":".5em"}}),Object(o["m"])(f,{type:"button",icon:"pi pi-pencil",class:"p-button-warning"})]})),_:1})]})),_:1},8,["value"])])]),Object(o["m"])(v,{name:"TreeTableTemplatingDemo",sources:s.sources,service:["NodeService"],data:["treetablenodes"],github:"treetable/TreeTableTemplatingDemo.vue"},null,8,["sources"])])}var s=n("82f4"),p={data:function(){return{nodes:null,sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <TreeTable :value="nodes">\n            <template #header>\n                FileSystem\n            </template>\n            <Column field="name" header="Name" :expander="true"></Column>\n            <Column field="size" header="Size"></Column>\n            <Column field="type" header="Type"></Column>\n            <Column headerStyle="width: 8em" headerClass="p-text-center" bodyClass="p-text-center">\n                <template #header>\n                    <Button type="button" icon="pi pi-cog"></Button>\n                </template>\n                <template #body>\n                    <Button type="button" icon="pi pi-search" class="p-button-success" style="margin-right: .5em"></Button>\n                    <Button type="button" icon="pi pi-pencil" class="p-button-warning"></Button>\n                </template>\n            </Column>\n            <template #footer>\n                <div style="text-align:left">\n                    <Button icon="pi pi-refresh" />\n                </div>\n            </template>\n        </TreeTable>\n    </div>                  \n</template>\n\n<script>\nimport NodeService from \'./service/NodeService\';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <TreeTable :value="nodes">\n            <template #header>\n                FileSystem\n            </template>\n            <Column field="name" header="Name" :expander="true"></Column>\n            <Column field="size" header="Size"></Column>\n            <Column field="type" header="Type"></Column>\n            <Column headerStyle="width: 8em" headerClass="p-text-center" bodyClass="p-text-center">\n                <template #header>\n                    <Button type="button" icon="pi pi-cog"></Button>\n                </template>\n                <template #body>\n                    <Button type="button" icon="pi pi-search" class="p-button-success" style="margin-right: .5em"></Button>\n                    <Button type="button" icon="pi pi-pencil" class="p-button-warning"></Button>\n                </template>\n            </Column>\n            <template #footer>\n                <div style="text-align:left">\n                    <Button icon="pi pi-refresh" />\n                </div>\n            </template>\n        </TreeTable>\n    </div>                  \n</template>\n\n<script>\nimport { ref, onMounted } from \'vue\';\nimport NodeService from \'./service/NodeService\';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            nodeService.value.getTreeTableNodes().then(data => nodes.value = data);\n        })\n\n        const nodes = ref();\n        const nodeService = ref(new NodeService());\n\n        return { nodes, nodeService }\n    }\n}\n<\\/script>\n'}}}},nodeService:null,created:function(){this.nodeService=new s["a"]},mounted:function(){var e=this;this.nodeService.getTreeTableNodes().then((function(t){return e.nodes=t}))}};p.render=d;t["default"]=p},"82f4":function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var o=n("d4ec"),a=n("bee2"),i=n("bc3a"),r=n.n(i),c=function(){function e(){Object(o["a"])(this,e)}return Object(a["a"])(e,[{key:"getTreeTableNodes",value:function(){return r.a.get("demo/data/treetablenodes.json").then((function(e){return e.data.root}))}},{key:"getTreeNodes",value:function(){return r.a.get("demo/data/treenodes.json").then((function(e){return e.data.root}))}}]),e}()}}]);