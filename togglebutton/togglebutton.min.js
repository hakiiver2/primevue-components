this.primevue=this.primevue||{},this.primevue.togglebutton=function(e,l){"use strict";var t={name:"ToggleButton",emits:["update:modelValue","change","click","focus","blur"],props:{modelValue:Boolean,onIcon:String,offIcon:String,onLabel:{type:String,default:"Yes"},offLabel:{type:String,default:"No"},iconPos:{type:String,default:"left"},disabled:{type:Boolean,default:!1},tabindex:{type:Number,default:null},inputId:null,inputClass:null,inputStyle:null,inputProps:null,"aria-labelledby":{type:String,default:null},"aria-label":{type:String,default:null}},methods:{onClick(e){this.disabled||(this.$emit("update:modelValue",!this.modelValue),this.$emit("change",e),this.$emit("click",e))},onFocus(e){this.$emit("focus",e)},onBlur(e){this.$emit("blur",e)}},computed:{buttonClass(){return{"p-button p-togglebutton p-component":!0,"p-button-icon-only":this.hasIcon&&!this.hasLabel,"p-disabled":this.disabled,"p-highlight":!0===this.modelValue}},iconClass(){return[this.modelValue?this.onIcon:this.offIcon,"p-button-icon",{"p-button-icon-left":"left"===this.iconPos&&this.label,"p-button-icon-right":"right"===this.iconPos&&this.label}]},hasLabel(){return this.onLabel&&this.onLabel.length>0&&this.offLabel&&this.offLabel.length>0},hasIcon(){return this.onIcon&&this.onIcon.length>0&&this.offIcon&&this.offIcon.length>0},label(){return this.hasLabel?this.modelValue?this.onLabel:this.offLabel:"&nbsp;"}},directives:{ripple:e}};const n={class:"p-hidden-accessible"},i=["id","checked","value","aria-labelledby","aria-label"],o={class:"p-button-label"};return t.render=function(e,t,a,s,u,c){const r=l.resolveDirective("ripple");return l.withDirectives((l.openBlock(),l.createElementBlock("div",{class:l.normalizeClass(c.buttonClass),onClick:t[2]||(t[2]=e=>c.onClick(e))},[l.createElementVNode("span",n,[l.createElementVNode("input",l.mergeProps({type:"checkbox",role:"switch",id:a.inputId,class:a.inputClass,style:a.inputStyle,checked:a.modelValue,value:a.modelValue,"aria-labelledby":e.ariaLabelledby,"aria-label":e.ariaLabel,onFocus:t[0]||(t[0]=e=>c.onFocus(e)),onBlur:t[1]||(t[1]=e=>c.onBlur(e))},a.inputProps),null,16,i)]),c.hasIcon?(l.openBlock(),l.createElementBlock("span",{key:0,class:l.normalizeClass(c.iconClass)},null,2)):l.createCommentVNode("",!0),l.createElementVNode("span",o,l.toDisplayString(c.label),1)],2)),[[r]])},t}(primevue.ripple,Vue);
